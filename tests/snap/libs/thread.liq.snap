># Run a function in a separate thread.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Programming
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fast Whether the thread is supposed to return quickly or not. Typically, blocking tasks (e.g. fetching data over the internet) should not be considered to be fast. When set to `false` its priority will be lowered below that of request resolutions and fast timeouts. This is only effective if you set a dedicated queue for fast tasks, see the "scheduler" settings for more details.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~delay Delay (in seconds) after which the thread should be launched.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~every How often (in seconds) the thread should be run. If negative or `null`, run once.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param f Function to execute.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def replaces thread.run(~fast=true, ~delay=0., ~every=null(), f)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap storage.modifier.liquidsoap
#             ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                            ^ source.liquidsoap
#                                             ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                     ^ source.liquidsoap
#                                                      ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                             ^ source.liquidsoap
#                                                              ^ source.liquidsoap variable.liquidsoap
#                                                               ^ source.liquidsoap
>  every = every ?? getter(-1.)
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^^^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^ source.liquidsoap keyword.operator.coalesce.liquidsoap
#                  ^ source.liquidsoap
#                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>  def f() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap
>    ignore(f() == ())
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.compare.liquidsoap
#                 ^^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^ source.liquidsoap
>    getter.get(every)
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  thread.run.recurrent(fast=fast, delay=delay, f)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap keyword.other.liquidsoap
#         ^^^ source.liquidsoap variable.method.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Execute a callback when a predicate is `true`. The predicate
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># is checked `every` seconds and the callback is
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># called when the predicate returns `true` after having been
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># `false`, following the same semantics as `predicate.activates`.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Programming
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fast Whether the callback is supposed to return quickly or not.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~init Detect at beginning.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~every How often (in sec.) to check for the predicate.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~once Execute the function only once.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~changed Execute the function only if the predicate was false when last checked.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param p Predicate indicating when to execute the function, typically a time interval such as `{10h-10h30}`.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param f Function to execute when the predicate is true.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def thread.when(~fast=true, ~init=true, ~every=getter(0.5), ~once=false, ~changed=true, p, f)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap
#                                         ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                      ^^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.float.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                           ^ source.liquidsoap
#                                                            ^ source.liquidsoap
#                                                             ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                                 ^ source.liquidsoap
#                                                                  ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                        ^ source.liquidsoap
#                                                                         ^ source.liquidsoap
#                                                                          ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                                                 ^ source.liquidsoap
#                                                                                  ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                                       ^ source.liquidsoap
#                                                                                        ^ source.liquidsoap variable.liquidsoap
#                                                                                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                                          ^ source.liquidsoap
#                                                                                           ^ source.liquidsoap variable.liquidsoap
#                                                                                            ^ source.liquidsoap
>  p = once or not changed ? p : (predicate.activates(init=init, p))
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#             ^ source.liquidsoap
#              ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^ source.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap
#                          ^ source.liquidsoap keyword.control.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap keyword.control.liquidsoap
#                               ^^ source.liquidsoap
#                                 ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                  ^^ source.liquidsoap
>  def check()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
>    if p() then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap
#           ^^^^ source.liquidsoap keyword.control.liquidsoap
>      f()
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
>      once ? (-1.) : (getter.get(every))
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap keyword.control.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#               ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                ^^^ source.liquidsoap
#                   ^ source.liquidsoap keyword.control.liquidsoap
#                    ^^ source.liquidsoap
#                      ^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^ source.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      getter.get(every)
#^^^^^^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  thread.run.recurrent(fast=fast, delay=0., check)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap keyword.other.liquidsoap
#         ^^^ source.liquidsoap variable.method.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># @flag hidden
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def default_error_handler(~backtrace, err) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                         ^ source.liquidsoap
#                          ^ source.liquidsoap
#                           ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap variable.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^^ source.liquidsoap
>  log(label="runtime", level=1, "Uncaught error #{err}!\n#{backtrace}")
#^^ source.liquidsoap
#  ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#     ^ source.liquidsoap meta.function-call.liquidsoap
#      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                  ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                       ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                         ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                           ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>thread.on_error(null(), default_error_handler)
#^^^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
>