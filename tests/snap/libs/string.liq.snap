># Match a string with an expression. Perl compatible regular expressions are
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># recognized. Hence, special characters should be escaped. Alternatively, one
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># can use the the `r/_/.test(_)` syntax for regular expressions.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.match(~pattern, s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
#                             ^^ source.liquidsoap
>  regexp(pattern).test(s)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Extract substrings from a string. Perl compatible regular expressions are
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># recognized. Hence, special characters should be escaped. Returns a list of
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># (index,value). If the list does not have a pair associated to some index, it
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># means that the corresponding pattern was not found. Alter natively, one can
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># use the `r/_/.exec(_)` syntax for regular expressions.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.extract(~pattern, s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap
#                               ^^ source.liquidsoap
>  regexp(pattern).exec(s)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Replace all substrings matched by a pattern by another string returned by a
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># function. Alternatively, one can use the `r/_/g.replace(_)` syntax for regular
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># expressions.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~pattern Pattern (regular expression) of substrings which should be replaced.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param f Function getting a matched substring an returning the string to replace it with.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s String whose substrings should be replaced.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.replace(~pattern, f, s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^ source.liquidsoap
>  regexp(flags=["g"], pattern).replace(f, s)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Split a string at "separator". Perl compatible regular expressions are
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># recognized. Hence, special characters should be escaped. Alternatively, one
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># can use the `r/_/.split(_)` syntax for regular expressions.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.split(~separator, s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap
#                               ^^ source.liquidsoap
>  regexp(separator).split(s)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Split a string in two at first "separator".
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.split.first(~separator, s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap
#                        ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap
#                                   ^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap
>  n = string.length(s)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
>  l = string.length(separator)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>  i = string.index(substring=separator, s)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
>  if i < 0 then error.raise(error.not_found, "String does not contain the separator.") end
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap keyword.operator.compare.liquidsoap
#        ^ source.liquidsoap
#         ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#          ^ source.liquidsoap
#           ^^^^ source.liquidsoap keyword.control.liquidsoap
#               ^ source.liquidsoap
#                ^^^^^ source.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                  ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                      ^ source.liquidsoap
#                                                                                       ^^^ source.liquidsoap keyword.control.liquidsoap
>  (string.sub(s, start=0, length=i), string.sub(s, start=i+l, length=n-(i+l)))
#^^^ source.liquidsoap
#   ^^^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                    ^ source.liquidsoap
#                                     ^^^^^^ source.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                                              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                            ^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Test whether a string contains a given prefix, substring or suffix.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~prefix Prefix to look for.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~substring Substring to look for.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~suffix Suffix to look for.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s The string to look into.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.contains(~prefix="", ~substring="", ~suffix="", s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap
#                                 ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                      ^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                          ^ source.liquidsoap
#                                                           ^ source.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap
>  ans = ref(prefix == "" and substring == "" and suffix == "")
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.compare.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.boolean.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.compare.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.boolean.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.compare.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
>
>  if prefix != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    ans := ans() or string.sub(s, start=0, length=string.length(prefix)) == prefix
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap variable.liquidsoap
#       ^ source.liquidsoap
#        ^^ source.liquidsoap keyword.operator.set.liquidsoap
#          ^ source.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                        ^ source.liquidsoap
#                                                                         ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                           ^ source.liquidsoap
#                                                                            ^^^^^^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  if suffix != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    suflen = string.length(suffix)
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
>    ans := ans() or string.sub(s, start=string.length(s)-suflen, length=suflen) == suffix
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap variable.liquidsoap
#       ^ source.liquidsoap
#        ^^ source.liquidsoap keyword.operator.set.liquidsoap
#          ^ source.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                 ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                        ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap
#                                                                                ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                                  ^ source.liquidsoap
#                                                                                   ^^^^^^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  if substring != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>    sublen = string.length(substring)
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
>    for i = 0 to string.length(s)-sublen do
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^^ source.liquidsoap
#            ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#             ^ source.liquidsoap
#              ^^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^^^ source.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                  ^^^^^^ source.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap
#                                         ^^ source.liquidsoap variable.liquidsoap
>      ans := ans() or (string.sub(s, start=i, length=sublen) == substring)
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.operator.set.liquidsoap
#            ^ source.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                              ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                     ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                                             ^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.compare.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  ans()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#     ^ source.liquidsoap meta.function-call.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap variable.liquidsoap
>
># What remains of a string after a given prefix.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~prefix Requested prefix.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.residual(~prefix, s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap
>  n = string.length(prefix)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
>  if string.contains(prefix=prefix, s) then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap
#                                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>    string.sub(s, start=n, length=string.length(s)-n)
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    null()
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Test whether a string is a valid integer.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.is_int(s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
>  try
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>    ignore(int_of_string(s))
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
>    true
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>  catch _ do
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.control.liquidsoap
>    false
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Convert a string to a int.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.to_int(~default=0, s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap
#                   ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap
>  int_of_string(default=default, s)
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Convert a string to a float.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.to_float(~default=0., s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^ source.liquidsoap
#                                 ^ source.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap
>  float_of_string(default=default, s)
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>let string.binary = ()
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^ source.liquidsoap
>
># Value of a positive (unsigned) integer encoded using native memory representation.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~little_endian Whether the memory representation is little endian.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s String containing the binary representation.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.binary.to_int(~little_endian=true, s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap
#                                              ^ source.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap
>  ans = ref(0)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
>  n = string.length(s)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
>  for i = 0 to n-1 do
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.liquidsoap
#     ^ source.liquidsoap
#      ^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^^ source.liquidsoap
#          ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                 ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap variable.liquidsoap
>    ans := lsl(ans(),8) + string.nth(s, if little_endian then n-1-i else i end)
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap variable.liquidsoap
#       ^ source.liquidsoap
#        ^^ source.liquidsoap keyword.operator.set.liquidsoap
#          ^ source.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                     ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^^^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^^^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                    ^^^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                           ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  ans()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#     ^ source.liquidsoap meta.function-call.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap variable.liquidsoap
>
># Encode a positive (unsigned) integer using native memory representation.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~pad Minimum length in digits (pad on the left with zeros in order to reach it)
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~little_endian Whether the memory representation is little endian.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s String containing the binary representation.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.binary.of_int(~pad=0, ~little_endian=true, d)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^ source.liquidsoap variable.parameter.liquidsoap
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^ source.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                     ^ source.liquidsoap
#                                                      ^ source.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap
>  def rec f(d, s) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^ source.liquidsoap storage.modifier.liquidsoap
#          ^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#              ^ source.liquidsoap
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap
>    if d > 0 then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^ source.liquidsoap keyword.operator.compare.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#            ^ source.liquidsoap
#             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      c = string.hex_of_int(pad=2, (d mod 256))
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^^^^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^^ source.liquidsoap meta.function-call.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                      ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                              ^^ source.liquidsoap
>      if little_endian then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        f(lsr(d, 8), "#{s}\\x#{c}")
#^^^^^^^^ source.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                          ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                             ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        f(lsr(d, 8), "\\x#{c}#{s}")
#^^^^^^^^ source.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                             ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      s
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  ret = d == 0 ? "\\x00" : f(d, "")
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap keyword.control.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^ source.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                    ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap keyword.control.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>  ret = string.unescape(ret)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
>  len = string.length(ret)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>  if len < pad then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^ source.liquidsoap keyword.operator.compare.liquidsoap
#          ^ source.liquidsoap
#           ^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^^^ source.liquidsoap keyword.control.liquidsoap
>    ans = string.make(char_code=0, pad-len)
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^^^^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                       ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
>    if little_endian then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>      "#{ret}#{ans}"
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap string.quoted.double.liquidsoap
#       ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#         ^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#             ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#               ^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      "#{ans}#{ret}"
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap string.quoted.double.liquidsoap
#       ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#         ^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#             ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#               ^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    ret
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Add a null character at the end of a string.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s String.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.null_terminated(s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
>  s ^ "\000"
#^^ source.liquidsoap
#  ^ source.liquidsoap variable.liquidsoap
#   ^^^ source.liquidsoap
#      ^ source.liquidsoap string.quoted.double.liquidsoap
#       ^^ source.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#         ^^ source.liquidsoap string.quoted.double.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Generate an identifier if no identifier was provided.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~default Name from which identifier is generated if not present.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param id Proposed identifier.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.id.default(~default, id)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap
#                       ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap
#                                ^^ source.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap
>  null.default(id, {string.id(default)})
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Return a quoted copy of the given string.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># By default, the string is assumed to be `"utf8"` encoded and is escaped
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># following JSON and javascript specification.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~encoding One of: `"ascii"` or `"utf8"`. If `null`, `utf8` is tried first and `ascii` is used as a fallback if this fails.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.quote(~encoding=null(), s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                          ^ source.liquidsoap
#                           ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap
#                                   ^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^ source.liquidsoap
>  def special_char(~encoding, s)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap
>    if s == "'" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^ source.liquidsoap
#                ^^^^ source.liquidsoap keyword.control.liquidsoap
>      false
#^^^^^^ source.liquidsoap
#      ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      string.escape.special_char(encoding=encoding, s)
#^^^^^^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap keyword.other.liquidsoap
#             ^^^^^^ source.liquidsoap variable.method.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  s = string.escape(special_char=special_char, encoding=encoding, s)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>  "\"#{s}\""
#^^ source.liquidsoap
#  ^ source.liquidsoap string.quoted.double.liquidsoap
#   ^^ source.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#     ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#         ^^ source.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Return an unquoted copy of the given string.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># Quotes are removed by trying to parse the string
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># following the JSON string escaping convention.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.unquote(s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^ source.liquidsoap
>  try
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>    let json.parse (s:string) = s
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#       ^ source.liquidsoap
#        ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.type-annotation.liquidsoap keyword.other.cast.liquidsoap
#                      ^^^^^^ source.liquidsoap meta.type-annotation.liquidsoap
#                            ^ source.liquidsoap meta.type-annotation.liquidsoap
#                             ^^^ source.liquidsoap
#                                ^ source.liquidsoap variable.liquidsoap
>    s
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
>  catch _ do
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.control.liquidsoap
>    s
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>let string.data_uri = ()
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^ source.liquidsoap
>
># Encode a string using the data uri format,
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># i.e. `"data:<mime>[;base64],<data>"`.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~base64 Encode data using the base64 format
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~mime Data mime type
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.data_uri.encode(~base64=true, ~(mime:string), s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap
#                            ^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                        ^^^ source.liquidsoap
#                                           ^^^^ source.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.type-annotation.liquidsoap keyword.other.cast.liquidsoap
#                                                ^^^^^^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                      ^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                        ^ source.liquidsoap
#                                                         ^ source.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^^ source.liquidsoap
>  s = base64 ? ";base64,#{string.base64.encode(s)}" : ",#{s}"
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap keyword.control.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                          ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap keyword.other.liquidsoap
#                                 ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.method.liquidsoap
#                                       ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                        ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                              ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                 ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                   ^ source.liquidsoap
#                                                    ^ source.liquidsoap keyword.control.liquidsoap
#                                                     ^ source.liquidsoap
#                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                          ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                            ^ source.liquidsoap string.quoted.double.liquidsoap
>  "data:#{mime}#{s}"
#^^ source.liquidsoap
#  ^ source.liquidsoap string.quoted.double.liquidsoap
#   ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#          ^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#               ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Decode a string using the data uri format,
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># i.e. `"data:<mime>[;base64],<data>"`.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.data_uri.decode(s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
#                             ^^ source.liquidsoap
>  captured = r/^data:(?<mime>[\/\w]+)(?<base64>;base64)?,(?<data>.+)$/.exec(s).groups
#^^ source.liquidsoap
#  ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap string.regexp.liquidsoap
#               ^^^^^^^^^^^^^^^ source.liquidsoap string.regexp.liquidsoap
#                              ^^ source.liquidsoap string.regexp.liquidsoap constant.character.escape.liquidsoap
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.regexp.liquidsoap
#                                                                     ^ source.liquidsoap string.regexp.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                            ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                              ^ source.liquidsoap keyword.other.liquidsoap
#                                                                               ^^^^^^ source.liquidsoap variable.method.liquidsoap
>  if list.assoc.mem("mime", captured) and list.assoc.mem("data", captured) then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap keyword.other.liquidsoap
#          ^^^^^ source.liquidsoap variable.method.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^^^^ source.liquidsoap variable.liquidsoap
#                                              ^ source.liquidsoap keyword.other.liquidsoap
#                                               ^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap
#                                                                           ^^^^ source.liquidsoap keyword.control.liquidsoap
>    mime = list.assoc("mime", captured)
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#        ^^ source.liquidsoap
#          ^ source.liquidsoap
#           ^^^^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
>    data = list.assoc("data", captured)
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#        ^^ source.liquidsoap
#          ^ source.liquidsoap
#           ^^^^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
>    data =
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#        ^^ source.liquidsoap
>      if list.assoc.mem("base64", captured) then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap keyword.other.liquidsoap
#              ^^^^^ source.liquidsoap variable.method.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^ source.liquidsoap
#                                            ^^^^ source.liquidsoap keyword.control.liquidsoap
>        string.base64.decode(data)
#^^^^^^^^ source.liquidsoap
#        ^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap keyword.other.liquidsoap
#               ^^^^^^ source.liquidsoap variable.method.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        data
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap variable.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    data.{mime=mime}
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^^ source.liquidsoap
#          ^^^^ source.liquidsoap entity.name.method.liquidsoap
#              ^ source.liquidsoap
#               ^^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    null()
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>let string.getter = ()
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^ source.liquidsoap
>
># Create a string getter which will return once the given string and then the
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># empty string.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.getter.single(s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
>  first = ref(true)
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
>  fun () -> begin
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    if first() then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap
#               ^^^^ source.liquidsoap keyword.control.liquidsoap
>      first := false
#^^^^^^ source.liquidsoap
#      ^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap keyword.operator.set.liquidsoap
#              ^ source.liquidsoap
#               ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>      s
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap variable.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      ""
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap string.quoted.double.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Flush all values from a string getter and return
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># the concatenated result. If the getter is constant,
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># return the constant string. Otherwise, call the getter
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># repeatedly until it returns an empty string and return
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># the concatenated result
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.getter.flush(~separator="", gen) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^ source.liquidsoap
#                                       ^^^ source.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^^ source.liquidsoap
>  if getter.is_constant(gen) then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>    getter.get(gen)
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    def rec f(data) =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#       ^ source.liquidsoap
#        ^^^^ source.liquidsoap storage.modifier.liquidsoap
#            ^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^^^^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap
>      chunk = getter.get(gen)
#^^^^^^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
>      if chunk == "" then string.concat(separator=separator, data) else
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^^^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                        ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                                             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                  ^ source.liquidsoap
#                                                                   ^^^^ source.liquidsoap keyword.control.liquidsoap
>        f([...data, chunk])
#^^^^^^^^ source.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.spread.liquidsoap
#              ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>    f([])
#^^^^ source.liquidsoap
#    ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#     ^ source.liquidsoap meta.function-call.liquidsoap
#      ^^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Combine a list of string getters `[g1, ...]`
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># and return a single getter `g` such that:
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># `string.getter.flush(separator=s, g) = string.concat(separator=s, list.filter(fun (s) -> s != "", [string.getter.flush(g1), ...]))`
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.getter.concat(l) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
#                           ^^ source.liquidsoap
>  len = list.length(l)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
>  pos = ref(0)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
>
>  def rec f() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^ source.liquidsoap storage.modifier.liquidsoap
#          ^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap
>    if pos() == len then "" else
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#               ^ source.liquidsoap
#                ^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^ source.liquidsoap keyword.control.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap
#                            ^^^^ source.liquidsoap keyword.control.liquidsoap
>      gen = list.nth(l, pos())
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^^^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>      ret = getter.get(gen)
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
>
>      if ret == "" or getter.is_constant(gen) then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                         ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap
#                                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>        ref.incr(pos)
#^^^^^^^^ source.liquidsoap
#        ^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>
>      ret == "" ? f () : ret
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap keyword.control.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap keyword.control.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  getter(f)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>let string.char.ascii = ()
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^ source.liquidsoap
>
># All ASCII characters code
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>let string.char.ascii = list.init(128, fun (c) -> c)
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                                          ^^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>
># All ASCII control character codes
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>let string.char.ascii.control = list.init(32, fun (c) -> c)
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                             ^ source.liquidsoap
#                              ^^ source.liquidsoap
#                                ^^^^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                              ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                                                 ^^ source.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                      ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>
># All ASCII printable character codes
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>let string.char.ascii.printable = list.init(96, fun (c) -> c+32)
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                               ^ source.liquidsoap
#                                ^^ source.liquidsoap
#                                  ^^^^ source.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                                                   ^^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                             ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap
>
># All ASCII alphabet character codes
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>let string.char.ascii.alphabet = [
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^ source.liquidsoap
>  # A-Z
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  ...list.init(24, fun (c) -> c+65),
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.operator.spread.liquidsoap
#     ^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>  # a-z
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  ...list.init(24, fun (c) -> c+97),
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.operator.spread.liquidsoap
#     ^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>]
#^^ source.liquidsoap
>
># All ASCII number character codes
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>let string.char.ascii.number = list.init(10, fun (c) -> c+48)
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                            ^ source.liquidsoap
#                             ^^ source.liquidsoap
#                               ^^^^ source.liquidsoap variable.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                    ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                         ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                                                ^^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                          ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap
>
># Return a random ASCII character
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.char.ascii.random(range=[...string.char.ascii]) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^^ source.liquidsoap variable.liquidsoap
#                                  ^^ source.liquidsoap
#                                    ^^^ source.liquidsoap keyword.operator.spread.liquidsoap
#                                       ^^^^^^ source.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap keyword.other.liquidsoap
#                                              ^^^^ source.liquidsoap variable.method.liquidsoap
#                                                  ^ source.liquidsoap keyword.other.liquidsoap
#                                                   ^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                        ^ source.liquidsoap
#                                                         ^ source.liquidsoap
#                                                          ^^ source.liquidsoap
>  string.char(list.nth(range, random.int(min=0, max=list.length(range)-1)))
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                   ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                         ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                    ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Escape HTML entities.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @argsof string.escape[encoding]
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.argsof.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def string.escape.html(%argsof(string.escape[encoding]), s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                        ^ source.liquidsoap
#                                                         ^ source.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^^ source.liquidsoap
>  escaped =
#^^ source.liquidsoap
#  ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
>    [
#^^^^^^ source.liquidsoap
>      ("&", "&amp;"),
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>      ("<", "&lt;"),
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>      (">", "&gt;"),
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>      ('"', "&quot;"),
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.single.liquidsoap
#        ^ source.liquidsoap string.quoted.single.liquidsoap
#         ^ source.liquidsoap string.quoted.single.liquidsoap
#          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap
#                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>      ("'", "&#39;")
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#           ^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^ source.liquidsoap
>    ]
#^^^^^^ source.liquidsoap
>  def special_char(~encoding=_, c) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^ source.liquidsoap
>    list.assoc.mem(c, escaped)
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap keyword.other.liquidsoap
#         ^^^^^ source.liquidsoap variable.method.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  def escape_char(~encoding=_, c) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap
#                   ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap
#                                 ^^ source.liquidsoap
>    escaped[c]
#^^^^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap variable.liquidsoap
#             ^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  string.escape(
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
>    %argsof(string.escape[encoding]),
#^^^^ source.liquidsoap meta.function-call.liquidsoap
#    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#     ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#            ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>    special_char=special_char,
#^^^^ source.liquidsoap meta.function-call.liquidsoap
#    ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>    escape_char=escape_char,
#^^^^ source.liquidsoap meta.function-call.liquidsoap
#    ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>    s
#^^^^ source.liquidsoap meta.function-call.liquidsoap
#    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
>  )
#^^ source.liquidsoap meta.function-call.liquidsoap
#  ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>