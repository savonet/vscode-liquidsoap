>%ifdef environment
#^^^^^^ source.liquidsoap keyword.other.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
># Get the value of an environment variable.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># Returns `default` if the variable is not set.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category System
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def environment.get(~default="", s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^ source.liquidsoap
#                                 ^ source.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^^ source.liquidsoap
>  env = environment()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
>  if not list.assoc.mem(s, env) then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#        ^ source.liquidsoap
#         ^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap keyword.other.liquidsoap
#              ^^^^^ source.liquidsoap variable.method.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^^ source.liquidsoap keyword.control.liquidsoap
>    default
#^^^^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap variable.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    list.assoc(default=default, s, env)
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>%endif
#^^^^^^ source.liquidsoap keyword.other.liquidsoap
>
># Split the arguments of an url of the form `arg=bar&arg2=bar2` into
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># `[("arg","bar"),("arg2","bar2")]`. The returned strings are decoded (see
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># `url.decode`).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param args Argument string to split.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def url.split_args(args) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                  ^ source.liquidsoap
#                   ^^^^ source.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap
#                        ^^ source.liquidsoap
>  def f(x) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap
>    ret = r/=/.split(x)
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap string.regexp.liquidsoap
#            ^ source.liquidsoap string.regexp.liquidsoap
#             ^ source.liquidsoap string.regexp.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>    arg = url.decode(list.nth(default="",ret,0))
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>    val = url.decode(list.nth(default="",ret,1))
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>    (arg,val)
#^^^^^ source.liquidsoap
#     ^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#         ^^^ source.liquidsoap variable.liquidsoap
#            ^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  l = r/&/.split(args)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^ source.liquidsoap string.regexp.liquidsoap
#        ^ source.liquidsoap string.regexp.liquidsoap
#         ^ source.liquidsoap string.regexp.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
>  list.map(f,l)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#             ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Split an url of the form `foo?arg=bar&arg2=bar2` into
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># `("foo",[("arg","bar"),("arg2","bar2")])`. The returned strings are decoded
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># (see `url.decode`).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category String
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param uri Url to split.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def url.split(uri) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^^^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>  ret = r/(?<uri>[^\?]*)\?(?<args>.*)/.exec(uri).groups
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^ source.liquidsoap string.regexp.liquidsoap
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.regexp.liquidsoap
#                                     ^ source.liquidsoap string.regexp.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap keyword.other.liquidsoap
#                                                 ^^^^^^ source.liquidsoap variable.method.liquidsoap
>  args = ret["args"]
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^ source.liquidsoap
>  if args != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^ source.liquidsoap
#                ^^^^ source.liquidsoap keyword.control.liquidsoap
>    (url.decode(ret["uri"]),url.split_args(args))
#^^^^^ source.liquidsoap
#     ^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^^^ source.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^^ source.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    (url.decode(uri),[])
#^^^^^ source.liquidsoap
#     ^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                     ^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Memoize the result of a function, making sure it is only executed once.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Programming
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def memoize(fn) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap
>  cached_result = ref([])
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>  fun () -> begin
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    if cached_result() != [] then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap
#                       ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                         ^^^^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      list.hd(cached_result())
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      result = fn()
#^^^^^^ source.liquidsoap
#      ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
>      cached_result := [result]
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
#                    ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^^^^^ source.liquidsoap variable.liquidsoap
#                              ^^ source.liquidsoap
>      result
#^^^^^^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>