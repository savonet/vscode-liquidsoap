>fade = ()
#^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^^^^ source.liquidsoap
>
># Make a fade function based on a source's clock.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~type Fade shape. One of: "sin", "exp", "log", "lin"
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~start Start value.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~stop Stop value.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~duration Duration in seconds.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~on_done Function to execute when the fade is finished
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def mkfade(~type="lin",~start=0.,~stop=1.,~duration=3.,~on_done={()},s) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                       ^ source.liquidsoap
#                        ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                      ^ source.liquidsoap
#                                       ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                        ^ source.liquidsoap
#                                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                          ^ source.liquidsoap
#                                           ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                   ^ source.liquidsoap
#                                                    ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                     ^ source.liquidsoap
#                                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                       ^ source.liquidsoap
#                                                        ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                               ^ source.liquidsoap
#                                                                ^ source.liquidsoap
#                                                                 ^^ source.liquidsoap
#                                                                   ^ source.liquidsoap
#                                                                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                     ^ source.liquidsoap variable.liquidsoap
#                                                                      ^ source.liquidsoap
#                                                                       ^^ source.liquidsoap
>  def log(x) = log(label="mkfade", x) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  # Shape functions must map 0. -> 0. and 1. -> 1.
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  pi = acos(-1.)
#^^ source.liquidsoap
#  ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^ source.liquidsoap
#       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
>  def sin_shape(x) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    (1. + sin((x-0.5)*pi))/2.
#^^^^^ source.liquidsoap
#     ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                 ^^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.float.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                      ^^ source.liquidsoap variable.liquidsoap
#                        ^^ source.liquidsoap
#                          ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                           ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                            ^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  curve = 2.
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#           ^^ source.liquidsoap
>  m = exp(curve-1.) - exp(-1.)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>  def exp_shape(x) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    (exp((curve*x)-1.) - exp(-1.))/m
#^^^^^ source.liquidsoap
#     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                   ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                    ^^^ source.liquidsoap
#                       ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                   ^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  curve = 10.
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#            ^^ source.liquidsoap
>  m = ln(1.+curve)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#            ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
>  def log_shape(x) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    ln(1.+10.*x)/m
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#          ^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                 ^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def lin_shape(x) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    x
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  shape =
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
>    if type == "sin" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>      sin_shape
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    elsif type == "exp" then
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap keyword.control.liquidsoap
#         ^ source.liquidsoap
#          ^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap
#                        ^^^^ source.liquidsoap keyword.control.liquidsoap
>      exp_shape
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    elsif type == "log" then
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap keyword.control.liquidsoap
#         ^ source.liquidsoap
#          ^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap
#                        ^^^^ source.liquidsoap keyword.control.liquidsoap
>      log_shape
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    elsif type == "lin" then
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap keyword.control.liquidsoap
#         ^ source.liquidsoap
#          ^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap
#                        ^^^^ source.liquidsoap keyword.control.liquidsoap
>      lin_shape
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      log("Invalid type #{type}, using \"lin\"")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                          ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                         ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>      lin_shape
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  start_time = ref(-1.)
#^^ source.liquidsoap
#  ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>  def fade() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap
>    if start_time() < 0. then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap keyword.operator.compare.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                       ^^ source.liquidsoap
#                         ^^^^ source.liquidsoap keyword.control.liquidsoap
>      start_time := source.time(s)
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    t = source.time(s) - start_time()
#^^^^ source.liquidsoap
#    ^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
>    if t >= duration then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^^^^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>      on_done ()
#^^^^^^ source.liquidsoap
#      ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
>      stop
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      if start <= stop then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        start + shape(t/duration)*(stop-start)
#^^^^^^^^ source.liquidsoap
#        ^^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#               ^ source.liquidsoap
#                ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^^^^ source.liquidsoap variable.liquidsoap
#                                       ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                        ^^^^^ source.liquidsoap variable.liquidsoap
#                                             ^^ source.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        stop + shape(1.-t/duration)*(start-stop)
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#              ^ source.liquidsoap
#               ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^^^^ source.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                           ^^^^ source.liquidsoap variable.liquidsoap
#                                               ^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  fade
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Scale source during fading.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag hidden
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def fade.scale(~id="fade.scale", x, s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap
#                ^^ source.liquidsoap variable.parameter.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^ source.liquidsoap
#                                 ^ source.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap
>  amplify(id=id, override=null(), x, s)
#^^ source.liquidsoap
#  ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Fade the end of tracks.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~id Force the value of the source ID.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~duration Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_duration Metadata field which, if present and containing a float, overrides the 'duration' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_type Metadata field which, if present and correct, overrides the 'type' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~persist_overrides Keep duration and type overrides on track change.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~track_sensitive Be track sensitive (if `false` we only fade ou once at the beginning of the track).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~type Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def fade.out(~id="fade.out",~duration=3.,
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^ source.liquidsoap variable.parameter.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~override_duration="liq_fade_out",
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~override_type="liq_fade_type",
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~persist_overrides=false,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~track_sensitive=true,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~type="lin",s) =
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
#                           ^^ source.liquidsoap
>  def log(x) = log(label=source.id(s),level=4,x) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  fn = ref(fun () -> 1.)
#^^ source.liquidsoap
#  ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#              ^^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
>  original_type = type
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap variable.liquidsoap
>  type = ref(type)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
>  original_duration = duration
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^^ source.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^^^ source.liquidsoap variable.liquidsoap
>  duration = ref(duration)
#^^ source.liquidsoap
#  ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>  start_time = ref(-1.)
#^^ source.liquidsoap
#  ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>  started = ref(false)
#^^ source.liquidsoap
#  ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
>
>  def start_fade(d,_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^ source.liquidsoap
>    log("Fading out with type #{type()}, duration: #{duration()} and #{d}s remaining.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                       ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                   ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                     ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                     ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                         ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
>    start_time := source.time(s)
#^^^^ source.liquidsoap
#    ^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
>    d = if d < duration() then d else duration() end
#^^^^ source.liquidsoap
#    ^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^ source.liquidsoap keyword.control.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap keyword.operator.compare.liquidsoap
#              ^ source.liquidsoap
#               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^ source.liquidsoap keyword.control.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap
#                                 ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.control.liquidsoap
>    fn := mkfade(start=1.,stop=0.,type=type(),duration=d,s)
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap
#       ^^ source.liquidsoap keyword.operator.set.liquidsoap
#         ^ source.liquidsoap
#          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>    started := true
#^^^^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap keyword.operator.set.liquidsoap
#              ^ source.liquidsoap
#               ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def apply() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap
>    fn = fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
>    fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def stop_fade(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    if started() then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^ source.liquidsoap keyword.control.liquidsoap
>      fn := fun () -> 1.
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.operator.set.liquidsoap
#           ^ source.liquidsoap
#            ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                       ^^ source.liquidsoap
>      started := false
#^^^^^^ source.liquidsoap
#      ^^^^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap
#              ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def update_fade(m) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
#                    ^^ source.liquidsoap
>    if m[override_duration] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^^ source.liquidsoap
#                            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := float_of_string(default=duration(),m[override_duration])
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap
>      log("New fade duration: #{duration()}s.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                           ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    if m[override_type] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>      type := m[override_type]
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                             ^^ source.liquidsoap
>      log("New fade type: #{type()}.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                          ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def reset_overrides(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap
#                        ^^ source.liquidsoap
>    if not persist_overrides then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#          ^ source.liquidsoap
#           ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := original_duration
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>      type := original_type
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  s = source.on_track(s, reset_overrides)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
>  s = source.on_metadata(s, update_fade)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>  s =
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
>    if track_sensitive then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>      source.on_track(s, stop_fade)
#^^^^^^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      start_fade(duration(), [])
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^^^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
>      s
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  delay = fun () -> duration()
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#       ^^ source.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#             ^^ source.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap
>  s = if track_sensitive then source.on_end(s, delay=delay, start_fade) else s end
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^^ source.liquidsoap keyword.control.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^^^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                       ^ source.liquidsoap
#                                                                        ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                            ^ source.liquidsoap
#                                                                             ^ source.liquidsoap variable.liquidsoap
#                                                                              ^ source.liquidsoap
#                                                                               ^^^ source.liquidsoap keyword.control.liquidsoap
>  fade.scale(id=id, apply, s).{fade_duration = {duration()}, fade_type = {type()}}
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^ source.liquidsoap
#                               ^^^^^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                            ^^ source.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                            ^ source.liquidsoap
#                                                             ^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                                                      ^^ source.liquidsoap
#                                                                        ^ source.liquidsoap
#                                                                         ^ source.liquidsoap
#                                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Fade when the metadata trigger is received and then skip.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~id Force the value of the source ID.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~duration Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_duration Metadata field which, if present and containing a float, overrides the 'duration' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_type Metadata field which, if present and correct, overrides the 'type' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_skip Metadata field which, when present and set to "true", will trigger the fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~persist_overrides Keep duration and type overrides on track change.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~type Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def fade.skip(~id="fade.skip",~duration=5.,
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap variable.parameter.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                              ^ source.liquidsoap
#                               ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~override_duration="liq_fade_skip",
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                               ^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~override_type="liq_fade_type",
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~persist_overrides=false,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~override_skip="liq_skip_meta",
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>             ~type="lin",s) =
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
#                           ^^ source.liquidsoap
>  def log(x) = log(label=source.id(s),level=4,x) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  fn = ref(fun () -> 1.)
#^^ source.liquidsoap
#  ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#              ^^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
>  original_type = type
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap variable.liquidsoap
>  type = ref(type)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
>  original_duration = duration
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^^ source.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^^^ source.liquidsoap variable.liquidsoap
>  duration = ref(duration)
#^^ source.liquidsoap
#  ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>
>  def apply() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap
>    fn = fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
>    fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def stop_fade(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>    fn := fun () -> 1.
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap
#       ^^ source.liquidsoap keyword.operator.set.liquidsoap
#         ^ source.liquidsoap
#          ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#             ^^ source.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                     ^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def skip()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^ source.liquidsoap
#           ^ source.liquidsoap
>    log("Fade finished executing. Calling skip now")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>    source.skip(s);
#^^^^ source.liquidsoap
#    ^^^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def update_fade(m) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
#                    ^^ source.liquidsoap
>    if m[override_skip] == "true" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>      remaining = source.remaining(s)
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
>      duration = if remaining < duration() then remaining else duration() end
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap keyword.control.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap
#                              ^ source.liquidsoap keyword.operator.compare.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap
#                                                          ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                              ^ source.liquidsoap
#                                                               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap
#                                                                          ^^^ source.liquidsoap keyword.control.liquidsoap
>      log("Skip fade executed for: #{duration}s")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                   ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                     ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
>      fn := mkfade(start=1.,stop=0.,type=type(),duration=duration, on_done=skip,s)
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap keyword.operator.set.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                    ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                         ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                           ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    if m[override_duration] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^^ source.liquidsoap
#                            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := float_of_string(default=duration(),m[override_duration])
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap
>      log("New fade duration: #{duration()}")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    if m[override_type] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>      type := m[override_type]
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                             ^^ source.liquidsoap
>      log("New fade type: #{type()}")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                          ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def reset_overrides(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap
#                        ^^ source.liquidsoap
>    if not persist_overrides then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#          ^ source.liquidsoap
#           ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := original_duration
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>      type := original_type
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  s = source.on_track(s, reset_overrides)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
>  s = source.on_metadata(s, update_fade)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>  s = source.on_track(s, stop_fade)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>  fade.scale(id=id, apply, s).{fade_duration = {duration()}, fade_type = {type()} }
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^ source.liquidsoap
#                               ^^^^^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                            ^^ source.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                            ^ source.liquidsoap
#                                                             ^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                                                      ^^ source.liquidsoap
#                                                                        ^ source.liquidsoap
#                                                                         ^ source.liquidsoap
#                                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^ source.liquidsoap
#                                                                                  ^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Fade the beginning of tracks.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~id Force the value of the source ID.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~duration Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_duration Metadata field which, if present and containing a float, overrides the 'duration' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_type Metadata field which, if present and correct, overrides the 'type' parameter for the current track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~persist_overrides Keep duration and type overrides on track change.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~track_sensitive Be track sensitive (if `false` we only fade in once at the beginning of the track).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~type Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def fade.in(~id="fade.in",~duration=3.,
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap variable.parameter.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap
#                           ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            ~override_duration="liq_fade_in",
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            ~override_type="liq_fade_type",
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            ~persist_overrides=false,
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            ~track_sensitive=true,
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            ~type="lin",s) =
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^^ source.liquidsoap variable.parameter.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap
#                          ^^ source.liquidsoap
>  def log(x) = log(label=source.id(s),level=4,x) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap variable.liquidsoap
#           ^ source.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  fn = ref(fun () -> 0.)
#^^ source.liquidsoap
#  ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#              ^^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
>  original_duration = duration
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^^ source.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^^^ source.liquidsoap variable.liquidsoap
>  duration = ref(duration)
#^^ source.liquidsoap
#  ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#          ^^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>  original_type = type
#^^ source.liquidsoap
#  ^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap variable.liquidsoap
>  type = ref(type)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
>
>  def apply() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap
>    fn = fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
>    fn()
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def start_fade(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap
>    log("Fading in with type: #{type()} and duration: #{duration()}s.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                       ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                      ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                   ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
>    fn := mkfade(start=0.,stop=1.,type=type(),duration=duration(),s)
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap
#       ^^ source.liquidsoap keyword.operator.set.liquidsoap
#         ^ source.liquidsoap
#          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                  ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                              ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def update_fade(m) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
#                    ^^ source.liquidsoap
>    if m[override_duration] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                          ^^ source.liquidsoap
#                            ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                              ^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := float_of_string(default=duration(),m[override_duration])
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap
>      log("New fade duration: #{duration()}s.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                           ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    if m[override_type] != "" then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>      type := m[override_type]
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                             ^^ source.liquidsoap
>      log("New fade type: #{type()}.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                          ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def reset_overrides(_) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap
#                        ^^ source.liquidsoap
>    if not persist_overrides then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#          ^ source.liquidsoap
#           ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      duration := original_duration
#^^^^^^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>      type := original_type
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.operator.set.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  s = source.on_track(s, reset_overrides)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
>  s = source.on_metadata(s, update_fade)
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>  s = if track_sensitive then source.on_track(s, start_fade) else start_fade([]); s end
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^^ source.liquidsoap keyword.control.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^^^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap
#                                                             ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                 ^ source.liquidsoap
#                                                                  ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                             ^^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                ^^ source.liquidsoap
#                                                                                  ^ source.liquidsoap variable.liquidsoap
#                                                                                   ^ source.liquidsoap
#                                                                                    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  fade.scale(id=id, apply, s).{fade_duration = {duration()}, fade_type = {type()} }
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^ source.liquidsoap
#                               ^^^^^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                            ^^ source.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                            ^ source.liquidsoap
#                                                             ^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                                                                      ^^ source.liquidsoap
#                                                                        ^ source.liquidsoap
#                                                                         ^ source.liquidsoap
#                                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^ source.liquidsoap
#                                                                                  ^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Simple transition for crossfade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_in  Fade-in duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_out Fade-out duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param a Ending track
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param b Starting track
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def cross.simple(~fade_in=3.,~fade_out=3.,a,b)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                         ^ source.liquidsoap
#                          ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                           ^ source.liquidsoap
#                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap
#                              ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                      ^ source.liquidsoap
#                                       ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                        ^ source.liquidsoap
#                                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                          ^ source.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                            ^ source.liquidsoap variable.liquidsoap
#                                             ^ source.liquidsoap
>  def fade.out(s) = fade.out(type="sin",duration=fade_out,s) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                   ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap
#                                                             ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  def fade.in(s)  = fade.in(type="sin",duration=fade_in,s) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  add = fun (a,b) -> add(normalize=false,[b, a])
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#           ^^ source.liquidsoap
#             ^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>
>  add(fade.out(a),fade.in(b))
#^^ source.liquidsoap
#  ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#     ^ source.liquidsoap meta.function-call.liquidsoap
#      ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#           ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                       ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Smart transition for crossfade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~log Default logger
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_in  Fade-in duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_out Fade-out duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~high     Value, in dB, for loud sound level.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~medium   Value, in dB, for medium sound level.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~margin   Margin to detect sources that have too different sound level for crossing.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~default Smart crossfade: transition used when no rule applies (default: sequence).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param a Ending track
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param b Starting track
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def cross.smart(~log=fun(x)->log(label="cross.smart",x),
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^^ source.liquidsoap variable.parameter.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
#                           ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                             ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                        ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>                ~fade_in=3.,~fade_out=3.,
#^^^^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                          ^ source.liquidsoap
#                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                            ^ source.liquidsoap
#                             ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>                ~default=(fun (a,b) -> (sequence([a, b]):source)),
#^^^^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                        ^^ source.liquidsoap
#                          ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                             ^^ source.liquidsoap
#                               ^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap variable.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                                      ^^ source.liquidsoap
#                                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^ source.liquidsoap meta.type-annotation.liquidsoap keyword.other.cast.liquidsoap
#                                                         ^^^^^^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                               ^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                                ^ source.liquidsoap
#                                                                 ^ source.liquidsoap
>                ~high=-15., ~medium=-32., ~margin=4.,
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                       ^^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                         ^ source.liquidsoap
#                          ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^^ source.liquidsoap
#                             ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                     ^^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^^ source.liquidsoap
#                                           ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                                 ^ source.liquidsoap
#                                                  ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                   ^ source.liquidsoap
#                                                    ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>                a, b)
#^^^^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^ source.liquidsoap
#                   ^ source.liquidsoap variable.liquidsoap
#                    ^^ source.liquidsoap
>  def fade.out(s) = fade.out(type="sin",duration=fade_out,s) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                   ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap
#                                                             ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  def fade.in(s)  = fade.in(type="sin",duration=fade_in,s) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap variable.liquidsoap
#               ^ source.liquidsoap
#                ^^^ source.liquidsoap
#                   ^ source.liquidsoap
#                    ^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap
#                                                           ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>  add = fun (a,b) -> add(normalize=false,[b, a])
#^^ source.liquidsoap
#  ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#     ^^ source.liquidsoap
#       ^ source.liquidsoap
#        ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#           ^^ source.liquidsoap
#             ^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                   ^^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>
>  # This is for the type system..
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  ignore(a.metadata["foo"])
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#           ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
>  ignore(b.metadata["foo"])
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#           ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
>
>  if
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
>    # If A and B are not too loud and close, fully cross-fade them.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    a.db_level <= medium and b.db_level <= medium and abs(a.db_level - b.db_level) <= margin
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
#     ^ source.liquidsoap keyword.other.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^^^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap
#                         ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap
#                               ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^^^^^^ source.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap
#                                                  ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                                     ^ source.liquidsoap
#                                                      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                         ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                  ^ source.liquidsoap
#                                                                                   ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                                     ^ source.liquidsoap
#                                                                                      ^^^^^^ source.liquidsoap variable.liquidsoap
>    then
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      log("Old <= medium, new <= medium and |old-new| <= margin.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
>      log("Old and new source are not too loud and close.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>      log("Transition: crossed, fade-in, fade-out.")
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>      add(fade.out(a.source),fade.in(b.source))
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                     ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                  ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                       ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                             ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
>
>  elsif
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    # If B is significantly louder than A, only fade-out A.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    # We don't want to fade almost silent things, ask for >medium.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    b.db_level >= a.db_level + margin and a.db_level >= medium and b.db_level <= high
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
#     ^ source.liquidsoap keyword.other.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap keyword.other.liquidsoap
#                    ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^^^ source.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^ source.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap
#                                            ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                    ^ source.liquidsoap
#                                                     ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                       ^ source.liquidsoap
#                                                        ^^^^^^ source.liquidsoap variable.liquidsoap
#                                                              ^ source.liquidsoap
#                                                               ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                                                  ^ source.liquidsoap
#                                                                   ^ source.liquidsoap variable.liquidsoap
#                                                                    ^ source.liquidsoap keyword.other.liquidsoap
#                                                                     ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                                             ^ source.liquidsoap
#                                                                              ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^^^^ source.liquidsoap variable.liquidsoap
>  then
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    log("new >= old + margin, old >= medium and new <= high.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
>    log("New source is significantly louder than old one.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>    log("Transition: crossed, fade-out.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap
>    add(fade.out(a.source),b.source)
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#             ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                           ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap
>
>  elsif
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    # Opposite as the previous one.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    a.db_level >= b.db_level + margin and b.db_level >= medium and a.db_level <= high
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
#     ^ source.liquidsoap keyword.other.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap keyword.other.liquidsoap
#                    ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^^^ source.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^ source.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap
#                                            ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                    ^ source.liquidsoap
#                                                     ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                       ^ source.liquidsoap
#                                                        ^^^^^^ source.liquidsoap variable.liquidsoap
#                                                              ^ source.liquidsoap
#                                                               ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                                                  ^ source.liquidsoap
#                                                                   ^ source.liquidsoap variable.liquidsoap
#                                                                    ^ source.liquidsoap keyword.other.liquidsoap
#                                                                     ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                                             ^ source.liquidsoap
#                                                                              ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^^^^ source.liquidsoap variable.liquidsoap
>    then
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>    log("old >= new + margin, new >= medium and old <= high")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap
>    log("Old source is significantly louder than new one.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap
>    log("Transition: crossed, fade-in.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>    add(a.source,fade.in(b.source))
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                 ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap
>
>  elsif
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    # Do not fade if it's already very low.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    b.db_level >= a.db_level + margin and a.db_level <= medium and b.db_level <= high
#^^^^ source.liquidsoap
#    ^ source.liquidsoap variable.liquidsoap
#     ^ source.liquidsoap keyword.other.liquidsoap
#      ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                 ^ source.liquidsoap
#                  ^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap keyword.other.liquidsoap
#                    ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^^^ source.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^ source.liquidsoap variable.liquidsoap
#                                           ^ source.liquidsoap keyword.other.liquidsoap
#                                            ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                    ^ source.liquidsoap
#                                                     ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                       ^ source.liquidsoap
#                                                        ^^^^^^ source.liquidsoap variable.liquidsoap
#                                                              ^ source.liquidsoap
#                                                               ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                                                  ^ source.liquidsoap
#                                                                   ^ source.liquidsoap variable.liquidsoap
#                                                                    ^ source.liquidsoap keyword.other.liquidsoap
#                                                                     ^^^^^^^^ source.liquidsoap variable.method.liquidsoap
#                                                                             ^ source.liquidsoap
#                                                                              ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                                                                                ^ source.liquidsoap
#                                                                                 ^^^^ source.liquidsoap variable.liquidsoap
>  then
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    log("new >= old + margin, old <= medium and new <= high.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
>    log("Do not fade if it's already very low.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
>    log("Transition: crossed, no fade.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>    add(a.source,b.source)
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                 ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>
>  # What to do with a loud end and a quiet beginning ?
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  # A good idea is to use a jingle to separate the two tracks,
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  # but that's another story.
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    # Otherwise, A and B are just too loud to overlap nicely, or the
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    # difference between them is too large and overlapping would completely
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    # mask one of them.
#^^^^ source.liquidsoap
#    ^ source.liquidsoap comment.line.number-sign.liquidsoap
#     ^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    log("No transition: using default.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap meta.function-call.liquidsoap
>    default(a.source, b.source)
#^^^^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                        ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Crossfade between tracks, taking the respective volume levels into account in
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># the choice of the transition.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Source / Fade
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.category.liquidsoap
#           ^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~id           Force the value of the source ID.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~duration     Duration (in seconds) of buffered data from each track \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      that is used to compute the transition between tracks.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~override_duration \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      Metadata field which, if present and containing a \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      float, overrides the 'duration' parameter for current \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~persist_override Keep duration override on track change.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_in      Fade-in duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~fade_out     Fade-out duration, if any.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~width        Width of the volume analysis window.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~conservative Always prepare for a premature end-of-track.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~minimum      Minimum duration (in sec.) for a cross: \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      If the track ends without any warning (e.g. in case of skip) \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      there may not be enough data for a decent composition. \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      Set to 0. to avoid having transitions after skips, \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      or more to avoid transitions on short tracks. \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      With a negative default, transitions always occur.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~default      Smart crossfade: transition used when no rule applies \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      (default: sequence).
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~smart        Enable smart crossfading
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~high         Smart crossfade: value, in dB, for loud sound level.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~medium       Smart crossfade: value, in dB, for medium sound level.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~margin       Smart crossfade: margin to detect sources that have too different \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      sound level for crossing.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~deduplicate  Crossfade transitions can generate duplicate metadata. When `true`, the operator \
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#                      removes duplicate metadata from the returned source.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param s             The input source.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^ source.liquidsoap comment.line.number-sign.liquidsoap
#  ^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap comment.doc.param.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def crossfade(~id=null(), ~duration=5.,~override_duration="liq_cross_duration",
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap variable.parameter.liquidsoap
#                 ^ source.liquidsoap
#                  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^ source.liquidsoap
#                          ^ source.liquidsoap
#                           ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap
#                                        ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                         ^ source.liquidsoap
#                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                           ^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>              ~persist_override=false,~fade_in=3.,~fade_out=3.,~smart=false,
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^^^^^^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^ source.liquidsoap
#                                       ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                ^ source.liquidsoap
#                                                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                  ^ source.liquidsoap
#                                                   ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                           ^ source.liquidsoap
#                                                            ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                             ^ source.liquidsoap
#                                                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                               ^ source.liquidsoap
#                                                                ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                                     ^ source.liquidsoap
#                                                                      ^^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                                           ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>              ~default=(fun (a,b) -> (sequence([a, b]):source)),
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                      ^^ source.liquidsoap
#                        ^^^ source.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                           ^^ source.liquidsoap
#                             ^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                               ^ source.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^^ source.liquidsoap keyword.control.function.declaration.liquidsoap
#                                    ^^ source.liquidsoap
#                                      ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                      ^ source.liquidsoap meta.type-annotation.liquidsoap keyword.other.cast.liquidsoap
#                                                       ^^^^^^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                             ^ source.liquidsoap meta.type-annotation.liquidsoap
#                                                              ^ source.liquidsoap
#                                                               ^ source.liquidsoap
>              ~high=-15., ~medium=-32., ~margin=4., ~deduplicate=true,
#^^^^^^^^^^^^^^^ source.liquidsoap
#               ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                     ^^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^^ source.liquidsoap
#                           ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                 ^ source.liquidsoap
#                                  ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                   ^^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^^ source.liquidsoap
#                                         ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                               ^ source.liquidsoap
#                                                ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                                 ^ source.liquidsoap
#                                                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^^ source.liquidsoap
#                                                     ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                                                ^ source.liquidsoap
#                                                                 ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>              ~minimum=(-1.),~width=2.,~conservative=true,s)
#^^^^^^^^^^^^^^^ source.liquidsoap
#               ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                         ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                          ^^ source.liquidsoap
#                            ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap
#                              ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap
#                                        ^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                                                    ^ source.liquidsoap
#                                                     ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
#                                                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                          ^ source.liquidsoap variable.liquidsoap
#                                                           ^^ source.liquidsoap
>  id = string.id.default(default="crossfade", id)
#^^ source.liquidsoap
#  ^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap keyword.other.liquidsoap
#              ^^ source.liquidsoap variable.method.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                  ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                             ^ source.liquidsoap meta.function-call.liquidsoap
#                                              ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
>  def log(~level=3,x) = log(label=id,level=level,x) end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^ source.liquidsoap
#          ^ source.liquidsoap
#           ^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                ^ source.liquidsoap
#                 ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                  ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                   ^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^ source.liquidsoap
#                       ^ source.liquidsoap
#                        ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                     ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                                   ^ source.liquidsoap
#                                                    ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def simple_transition(a,b)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                       ^ source.liquidsoap
#                        ^ source.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap variable.liquidsoap
#                           ^ source.liquidsoap
>    list.iter(fun(x)-> log(level=4,"Before: #{x}"), metadata.cover.remove(a.metadata))
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                             ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>    list.iter(fun(x)-> log(level=4,"After : #{x}"), metadata.cover.remove(b.metadata))
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                             ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>
>    log("Simple transition: crossed, fade-in, fade-out.")
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
>    cross.simple(fade_in=fade_in, fade_out=fade_out, a.source, b.source)
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
#                 ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                       ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                               ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                 ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def smart_transition(a,b)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                      ^ source.liquidsoap
#                       ^ source.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                         ^ source.liquidsoap variable.liquidsoap
#                          ^ source.liquidsoap
>    list.iter(fun(x)-> log(level=4,"Before: #{x}"), metadata.cover.remove(a.metadata))
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                             ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>    list.iter(fun(x)-> log(level=4,"After : #{x}"), metadata.cover.remove(b.metadata))
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^ source.liquidsoap meta.function-call.liquidsoap keyword.other.function.definition.anonymous.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^ source.liquidsoap meta.function-call.liquidsoap keyword.control.function.declaration.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                   ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                             ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                                                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                                                                                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>
>    cross.smart(log=log, fade_in=fade_in, fade_out=fade_out, default=default,
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                  ^ source.liquidsoap meta.function-call.liquidsoap
#                                                   ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                                             ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                     ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>                high=high, medium=medium, margin=margin, a, b)
#^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                        ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                         ^ source.liquidsoap meta.function-call.liquidsoap
#                                          ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                                 ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                        ^ source.liquidsoap meta.function-call.liquidsoap
#                                                         ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                            ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  transition =
#^^ source.liquidsoap
#  ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^^ source.liquidsoap
>    if smart then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      smart_transition
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      simple_transition
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  let (cross_id, deduplicate_id) = deduplicate ? (null(), null(id)) : (null(id), null())
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.declaration.pattern.liquidsoap
#     ^^ source.liquidsoap
#       ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                ^ source.liquidsoap
#                 ^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^ source.liquidsoap
#                                   ^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                                              ^ source.liquidsoap
#                                               ^ source.liquidsoap keyword.control.liquidsoap
#                                                ^^ source.liquidsoap
#                                                  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                         ^ source.liquidsoap
#                                                          ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                               ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                  ^^ source.liquidsoap
#                                                                    ^ source.liquidsoap keyword.control.liquidsoap
#                                                                     ^^ source.liquidsoap
#                                                                       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                            ^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                               ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                                ^ source.liquidsoap
#                                                                                 ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                       ^^ source.liquidsoap
>
>  crossed = cross(id=cross_id, width=width, duration=duration, persist_override=persist_override, override_duration=override_duration,
#^^ source.liquidsoap
#  ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
#           ^ source.liquidsoap
#            ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                                     ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                                               ^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                ^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                                                ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                                  ^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                                                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                                                                    ^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                                                                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
>            conservative=conservative, minimum=minimum, transition, s)
#^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#            ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
#                                       ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                                              ^ source.liquidsoap meta.function-call.liquidsoap
#                                               ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                       ^ source.liquidsoap meta.function-call.liquidsoap
#                                                        ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
#                                                                    ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap
>
>  s = if deduplicate then
#^^ source.liquidsoap
#  ^ source.liquidsoap entity.name.function.binding.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>    metadata.deduplicate(id=deduplicate_id, crossed)
#^^^^ source.liquidsoap
#    ^^^^^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^^ source.liquidsoap meta.function-call.liquidsoap variable.language.arguments.named.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    crossed
#^^^^ source.liquidsoap
#    ^^^^^^^ source.liquidsoap variable.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  s.{cross_duration={crossed.cross_duration()}}
#^^ source.liquidsoap
#  ^ source.liquidsoap variable.liquidsoap
#   ^^ source.liquidsoap
#     ^^^^^^^^^^^^^^ source.liquidsoap entity.name.method.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^^^^ source.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^ source.liquidsoap meta.function-call.liquidsoap
#                                             ^ source.liquidsoap
#                                              ^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>