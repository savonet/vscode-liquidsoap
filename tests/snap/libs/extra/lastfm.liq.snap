>%ifdef audioscrobbler.submit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>librefm = ()
#^^^^^^^^^^^^^ source.liquidsoap
>lastfm = ()
#^^^^^^^^^^^^ source.liquidsoap
>
># Submit metadata to libre.fm using the audioscrobbler protocol.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~source Source for tracks. Should be one of: "broadcast", "user", "recommendation" or "unknown". Since liquidsoap is intended for radio broadcasting, this is the default. Sources other than user don't need duration to be set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def librefm.submit(~user,~password,~source="broadcast",~length=false,m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                      ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  audioscrobbler.submit(user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                source=source,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                host="turtle.libre.fm",port=80,
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                      ^^^^^^ source.liquidsoap
#                                            ^^ source.liquidsoap constant.numeric.integer
#                                              ^^ source.liquidsoap
>                m)
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># Submit metadata to lastfm.fm using the audioscrobbler protocol.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~source Source for tracks. Should be one of: "broadcast", "user", "recommendation" or "unknown". Since liquidsoap is intended for radio broadcasting, this is the default. Sources other than user don't need duration to be set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def lastfm.submit(~user,~password,~source="broadcast",~length=false,m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  audioscrobbler.submit(user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                source=source,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                host="post.audioscrobbler.com",port=80,
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^ source.liquidsoap
#                                                    ^^ source.liquidsoap constant.numeric.integer
#                                                      ^^ source.liquidsoap
>                m)
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># Submit metadata to libre.fm using the audioscrobbler protocol (nowplaying mode).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def librefm.nowplaying(~user,~password,~length=false,m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  audioscrobbler.nowplaying(user=user,password=password,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                host="turtle.libre.fm",port=80,
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                      ^^^^^^ source.liquidsoap
#                                            ^^ source.liquidsoap constant.numeric.integer
#                                              ^^ source.liquidsoap
>                m)
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># Submit metadata to lastfm.fm using the audioscrobbler protocol (nowplaying mode).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def lastfm.nowplaying(~user,~password,~length=false,m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  audioscrobbler.nowplaying(user=user,password=password,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>                host="post.audioscrobbler.com",port=80,
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^ source.liquidsoap
#                                                    ^^ source.liquidsoap constant.numeric.integer
#                                                      ^^ source.liquidsoap
>                m)
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>let source_on_end = source.on_end
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>let source_on_metadata = source.on_metadata
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
># Submit songs using audioscrobbler, respecting the full protocol:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># First signal song as now playing when starting, and
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># then submit song when it ends.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~source Source for tracks. Should be one of: "broadcast", "user", "recommendation" or "unknown". Since liquidsoap is intended for radio broadcasting, this is the default. Sources other than user don't need duration to be set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~delay Submit song when there is only this delay left, in seconds.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~force If remaining time is null, the song will be assumed to be skipped or cut, and not submitted. Set to zero to disable this behaviour.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def audioscrobbler.submit.full(
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~user,~password,
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~host="post.audioscrobbler.com",~port=80,
#^^^^^^^^^^^ source.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^^ source.liquidsoap
#                                           ^^ source.liquidsoap constant.numeric.integer
#                                             ^^ source.liquidsoap
>     ~source="broadcast",~length=false,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~delay=10.,~force=false,s) =
#^^^^^^^^^^^^ source.liquidsoap
#            ^^ source.liquidsoap constant.numeric.integer
#              ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  def f(m)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^ source.liquidsoap
>    audioscrobbler.nowplaying(
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        host=host,port=port,length=length,m)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>  s = source_on_metadata(s, f)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  f = fun (rem,m) ->
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
#         ^^^^^^^^^^^^ source.liquidsoap
>      # Avoid skipped songs
#^^^^^^ source.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>      if rem > 0. or force then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^ source.liquidsoap
#               ^ source.liquidsoap constant.numeric.integer
#                ^^ source.liquidsoap
#                  ^^ source.liquidsoap keyword.operator.liquidsoap
#                    ^^^^^^^ source.liquidsoap
#                           ^^^^ source.liquidsoap keyword.control.liquidsoap
>        audioscrobbler.submit(
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>          user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>          host=host,port=port,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>          source=source,m)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        log(label="audioscrobbler.submit.full",
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^ source.liquidsoap
>            level=4,"Remaining time null: \
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
>                     will not submit song (song skipped ?)")
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                           ^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>  source_on_end(s,delay=delay,f)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># Submit songs to librefm using audioscrobbler, respecting the full protocol:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># First signal song as now playing when starting, and
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># then submit song when it ends.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~source Source for tracks. Should be one of: "broadcast", "user", "recommendation" or "unknown". Since liquidsoap is intended for radio broadcasting, this is the default. Sources other than user don't need duration to be set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~delay Submit song when there is only this delay left, in seconds. If remaining time is less than this value, the song will be assumed to be skipped or cut, and not submitted. Set to zero to disable this behaviour.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~force If remaining time is null, the song will be assumed to be skipped or cut, and not submitted. Set to zero to disable this behaviour.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def librefm.submit.full(
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~user,~password,
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~source="broadcast",~length=false,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~delay=10.,~force=false,s) =
#^^^^^^^^^^^^ source.liquidsoap
#            ^^ source.liquidsoap constant.numeric.integer
#              ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    audioscrobbler.submit.full(
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      source=source,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      host="turtle.libre.fm",port=80,
#^^^^^^^^^^^ source.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^^^ source.liquidsoap
#                                  ^^ source.liquidsoap constant.numeric.integer
#                                    ^^ source.liquidsoap
>      delay=delay,force=force,s)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># Submit songs to lastfm using audioscrobbler, respecting the full protocol:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># First signal song as now playing when starting, and
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># then submit song when it ends.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Interaction
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~source Source for tracks. Should be one of: "broadcast", "user", "recommendation" or "unknown". Since liquidsoap is intended for radio broadcasting, this is the default. Sources other than user don't need duration to be set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~length Try to submit length information. This operation can be CPU intensive. Value forced to true when used with the "user" source type.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~delay Submit song when there is only this delay left, in seconds. If remaining time is less than this value, the song will be assumed to be skipped or cut, and not submitted. Set to zero to disable this behaviour.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~force If remaining time is null, the song will be assumed to be skipped or cut, and not submitted. Set to zero to disable this behaviour.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def lastfm.submit.full(
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~user,~password,
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~source="broadcast",~length=false,
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^^^^^^^^^^ source.liquidsoap
>     ~delay=10.,~force=false,s) =
#^^^^^^^^^^^^ source.liquidsoap
#            ^^ source.liquidsoap constant.numeric.integer
#              ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    audioscrobbler.submit.full(
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      user=user,password=password,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      source=source,length=length,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      host="post.audioscrobbler.com",port=80,
#^^^^^^^^^^^ source.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^ source.liquidsoap
#                                          ^^ source.liquidsoap constant.numeric.integer
#                                            ^^ source.liquidsoap
>      delay=delay,force=force,s)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>%endif
#^^^^^^^ source.liquidsoap
>