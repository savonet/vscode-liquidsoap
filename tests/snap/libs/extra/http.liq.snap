># Harbor middleware to add CORS headers
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @category Internet
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @flag extra
#^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~origin Configures the Access-Control-Allow-Origin CORS header
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~origin_callback Origin callback for advanced uses. If passed, overrides `origin` argument. Takes the request as input and returns the allowed origin. Return `null` to skip all CORS headers.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~methods Configures the Access-Control-Allow-Methods CORS header.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~allowed_headers Configures the Access-Control-Allow-Headers CORS header. If not specified, defaults to reflecting the headers specified in the request's Access-Control-Request-Headers header.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~exposed_headers Configures the Access-Control-Expose-Headers CORS header. If not specified, no custom headers are exposed.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~credentials Configures the Access-Control-Allow-Credentials CORS header. Set to true to pass the header, otherwise it is omitted.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~max_age Configures the Access-Control-Max-Age CORS header. Set to an integer to pass the header, otherwise it is omitted.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~preflight_continue Pass the CORS preflight response to the nexnhandler.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># @param ~options_status_code Provides a status code to use for successful OPTIONS requests, since some legacy browsers (IE11, various SmartTVs) choke on 204.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def harbor.http.middleware.cors(
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~origin=null("*"),
#^^^^^^^^^^^^^^^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^ source.liquidsoap
>  ~origin_callback=null(),
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~methods=["GET", "HEAD", "PUT", "PATCH", "POST", "DELETE"],
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^ source.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                         ^^ source.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                 ^^ source.liquidsoap
#                                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                           ^^^ source.liquidsoap
>  ~allowed_headers=null(),
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~exposed_headers=[],
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~credentials=false,
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~max_age=null(),
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~preflight_continue=false,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ~options_status_code=204) =
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                       ^^^ source.liquidsoap constant.numeric.integer
#                          ^^^^ source.liquidsoap
>  fun (req, res, next) -> begin
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                          ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    # This is for typing purposes
#^^^^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>    res = if false then http.response() else res end
#^^^^^^^^^^ source.liquidsoap
#          ^^ source.liquidsoap keyword.control.liquidsoap
#            ^^^^^^^ source.liquidsoap
#                   ^^^^ source.liquidsoap keyword.control.liquidsoap
#                       ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                        ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                            ^^^^^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.control.liquidsoap
>    if false then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^ source.liquidsoap
#             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      harbor.http.register("/foo", fun (r, _) -> ignore(if false then r else req end))
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^ source.liquidsoap
#                                   ^^^ source.liquidsoap keyword.control.liquidsoap
#                                      ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                        ^^ source.liquidsoap keyword.control.liquidsoap
#                                                          ^^^^^^^ source.liquidsoap
#                                                                 ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                     ^^^ source.liquidsoap
#                                                                        ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                            ^^^^^ source.liquidsoap
#                                                                                 ^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                                    ^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    vary = ref([])
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>    def add_vary() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^ source.liquidsoap
>      if vary() != [] then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        res.header("Vary", string.concat(separator=",", vary()))
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                      ^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def vary(v) =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^ source.liquidsoap
>      vary := v::vary()
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_origin(origin) =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      res.header("Access-Control-Allow-Origin", origin)
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^^^^^ source.liquidsoap
>      if origin != "*" then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        vary("Origin")
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_methods() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^ source.liquidsoap
>      if methods != [] then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        res.header("Access-Control-Allow-Methods", string.concat(separator=",", methods))
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                              ^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_credentials() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      if credentials then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>        res.header("Access-Control-Allow-Credentials", "true")
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                             ^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_allowed_headers() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      allowed_headers =
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        if null.defined(allowed_headers) then
#^^^^^^^^ source.liquidsoap
#        ^^ source.liquidsoap keyword.control.liquidsoap
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                         ^^^^ source.liquidsoap keyword.control.liquidsoap
>          string.concat(separator=",", null.get(allowed_headers))
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        elsif list.assoc.mem("access-control-request-headers", req.headers) then
#^^^^^^^^ source.liquidsoap
#        ^^^^^ source.liquidsoap keyword.control.liquidsoap
#             ^^^^^^^^^^^^^^^^ source.liquidsoap
#                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                             ^^^^^^^^^^^^^^^ source.liquidsoap
#                                                                            ^^^^ source.liquidsoap keyword.control.liquidsoap
>          req.headers["access-control-request-headers"]
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                      ^^ source.liquidsoap
>        else
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap keyword.control.liquidsoap
>          null()
#^^^^^^^^^^^^^^^^^ source.liquidsoap
>        end
#^^^^^^^^ source.liquidsoap
#        ^^^ source.liquidsoap keyword.control.liquidsoap
>
>      if null.defined(allowed_headers) then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        res.header("Access-Control-Allow-Headers", null.get(allowed_headers))
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        vary("Access-Control-Request-Headers")
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_exposed_headers() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      if exposed_headers != [] then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                               ^^^^ source.liquidsoap keyword.control.liquidsoap
>        res.header("Access-Control-Expose-Headers", string.concat(separator=",", exposed_headers))
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                               ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def add_max_age() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^ source.liquidsoap
>       if null.defined(max_age) then
#^^^^^^^ source.liquidsoap
#       ^^ source.liquidsoap keyword.control.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^^ source.liquidsoap keyword.control.liquidsoap
>         res.header("Access-Control-Max-Age", "#{(null.get(max_age):int)}")
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap
#                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                          ^^ source.liquidsoap
>       end
#^^^^^^^ source.liquidsoap
#       ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    origin =
#^^^^^^^^^^^^^ source.liquidsoap
>      if null.defined(origin_callback) then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>        fn = null.get(origin_callback)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        fn(req)
#^^^^^^^^^^^^^^^^ source.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        getter.get(origin)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    if not null.defined(origin) then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^^ source.liquidsoap keyword.control.liquidsoap
>      next(req, res)
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      add_origin(null.get(origin))
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>      if req.method == "OPTIONS" then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^ source.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap
#                                 ^^^^ source.liquidsoap keyword.control.liquidsoap
>        add_credentials()
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_methods()
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_allowed_headers()
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_max_age()
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_exposed_headers()
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_vary()
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>        if preflight_continue then
#^^^^^^^^ source.liquidsoap
#        ^^ source.liquidsoap keyword.control.liquidsoap
#          ^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>          next(req, res)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        else
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap keyword.control.liquidsoap
>          res.status_code(options_status_code)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>          res.header("Content-length", "0")
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^ source.liquidsoap
#                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^^ source.liquidsoap
>        end
#^^^^^^^^ source.liquidsoap
#        ^^^ source.liquidsoap keyword.control.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        add_credentials()
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_allowed_headers()
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        add_vary()
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>        next(req, res)
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
># This is for typing purposes
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>if false then
#^^ source.liquidsoap keyword.control.liquidsoap
#  ^^^^^^^ source.liquidsoap
#         ^^^^ source.liquidsoap keyword.control.liquidsoap
>  harbor.http.middleware.register(harbor.http.middleware.cors())
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>