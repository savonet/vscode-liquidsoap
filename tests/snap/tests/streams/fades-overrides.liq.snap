>success = ref(false)
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>a = sine(duration=5.,440.)
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^^ source.liquidsoap
#                     ^^^ source.liquidsoap constant.numeric.integer
#                        ^^^ source.liquidsoap
>a = metadata.map(update=false, (fun (_) -> [("source", "a")]), a)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^ source.liquidsoap keyword.control.liquidsoap
#                                   ^^^^^^^^^^ source.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^^^^^^^^ source.liquidsoap
>
>b = sine(duration=5.,880.)
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^^ source.liquidsoap
#                     ^^^ source.liquidsoap constant.numeric.integer
#                        ^^^ source.liquidsoap
>b = metadata.map(update=false, (fun (_) -> [("source", "b"), ("liq_fade_out","1.1"), ("liq_fade_type","lin"), ("liq_fade_in","1.")]), b)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^ source.liquidsoap keyword.control.liquidsoap
#                                   ^^^^^^^^^^ source.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^^^^ source.liquidsoap
#                                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                               ^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                            ^ source.liquidsoap
#                                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                              ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                  ^^^^ source.liquidsoap
#                                                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                       ^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                     ^ source.liquidsoap
#                                                                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                       ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                           ^^^^ source.liquidsoap
#                                                                                                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                ^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                            ^ source.liquidsoap
#                                                                                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                              ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                                 ^^^^^^^^ source.liquidsoap
>
>c = sine(duration=5.,440.)
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^^ source.liquidsoap
#                     ^^^ source.liquidsoap constant.numeric.integer
#                        ^^^ source.liquidsoap
>c = metadata.map(update=false, (fun (_) -> [("source", "c")]), c)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^ source.liquidsoap keyword.control.liquidsoap
#                                   ^^^^^^^^^^ source.liquidsoap
#                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                              ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^^^^^^^^ source.liquidsoap
>
>s = sequence([a,b,c])
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>fade_in = fade.in(duration=5., type="sin", s)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^^^^ source.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                         ^^^^^ source.liquidsoap
>fade_out = fade.out(duration=5., type="sin", fade_in)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                             ^ source.liquidsoap constant.numeric.integer
#                              ^^^^^^^^ source.liquidsoap
#                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                       ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^^^^^^^^^^ source.liquidsoap
>
>track_count = ref(0)
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^^ source.liquidsoap
>
>def on_track(m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^ source.liquidsoap
>  ref.incr(track_count)
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>  if !track_count == 2 then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap constant.numeric.integer
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>    if m["source"] != "b" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^ source.liquidsoap keyword.control.liquidsoap
#                              ^^^^^^^^^^^^^ source.liquidsoap
#                                           ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_in.fade_duration() != 1. then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                  ^ source.liquidsoap constant.numeric.integer
#                                   ^^ source.liquidsoap
#                                     ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                         ^^^^^^^^^^^^^ source.liquidsoap
#                                                      ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_out.fade_duration() != 1.1 then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                   ^^^ source.liquidsoap constant.numeric.float
#                                      ^ source.liquidsoap
#                                       ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                           ^^^^^^^^^^^^^ source.liquidsoap
#                                                        ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_in.fade_type() != "lin" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                        ^^^^^^^^^^^^^ source.liquidsoap
#                                                     ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_out.fade_type() != "lin" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                         ^^^^^^^^^^^^^ source.liquidsoap
#                                                      ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  if !track_count == 3 then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap constant.numeric.integer
#                      ^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
>    if m["source"] != "c" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap
#                          ^^^^ source.liquidsoap keyword.control.liquidsoap
#                              ^^^^^^^^^^^^^ source.liquidsoap
#                                           ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_in.fade_duration() != 5. then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                  ^ source.liquidsoap constant.numeric.integer
#                                   ^^ source.liquidsoap
#                                     ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                         ^^^^^^^^^^^^^ source.liquidsoap
#                                                      ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_out.fade_duration() != 5. then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                   ^ source.liquidsoap constant.numeric.integer
#                                    ^^ source.liquidsoap
#                                      ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                          ^^^^^^^^^^^^^ source.liquidsoap
#                                                       ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_in.fade_type() != "sin" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                        ^^^^^^^^^^^^^ source.liquidsoap
#                                                     ^^^ source.liquidsoap keyword.control.liquidsoap
>    if fade_out.fade_type() != "sin" then test.fail() end
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                         ^^^^^^^^^^^^^ source.liquidsoap
#                                                      ^^^ source.liquidsoap keyword.control.liquidsoap
>    success := true
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>fade_out.on_track(on_track)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>clock.assign_new(sync="none",[fade_out])
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^^^^^^^^^^ source.liquidsoap
>
>def on_stop() =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^ source.liquidsoap
>  if !success then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^ source.liquidsoap
#              ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.pass()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.fail()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>output.dummy(fallible=true, on_stop=on_stop, fade_out)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>