># Basic request tests
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>
>settings.log.level.set(4)
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                       ^ source.liquidsoap constant.numeric.integer
#                        ^^ source.liquidsoap
>
>test.check(fun () ->
#^^^^^^^^^^^ source.liquidsoap
#           ^^^ source.liquidsoap keyword.control.liquidsoap
#              ^^^^^^^ source.liquidsoap
>  begin
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap keyword.control.liquidsoap
>    if request.duration("file1.mp3") != 5.06 then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^^^^ source.liquidsoap
#                                        ^^^^ source.liquidsoap constant.numeric.float
#                                            ^ source.liquidsoap
#                                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>      print("Invalid duration!")
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^^ source.liquidsoap
>      test.fail()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    r = request.dynamic(prefetch=1, fun () -> request.create("invalid"))
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap constant.numeric.integer
#                                  ^^ source.liquidsoap
#                                    ^^^ source.liquidsoap keyword.control.liquidsoap
#                                       ^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                              ^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                      ^^^ source.liquidsoap
>
>    if not r.add(request.create("file2.mp3")) then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^^ source.liquidsoap
#                                              ^^^^ source.liquidsoap keyword.control.liquidsoap
>      print("Failed to add request")
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^ source.liquidsoap
>      test.fail()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    r.set_queue([
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      request.create("file2.mp3"),
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^ source.liquidsoap
>      request.create("file3.mp3")
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^ source.liquidsoap
>    ])
#^^^^^^^ source.liquidsoap
>
>    q = r.queue()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>    if list.length(q) != 2 then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^ source.liquidsoap constant.numeric.integer
#                          ^ source.liquidsoap
#                           ^^^^ source.liquidsoap keyword.control.liquidsoap
>      print("Invalid request queue")
#^^^^^^^^^^^^ source.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^ source.liquidsoap
>      test.fail()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    def next() =
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^ source.liquidsoap
>      request.create("file1.mp3")
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>    r = request.dynamic(prefetch=1, next)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap constant.numeric.integer
#                                  ^^^^^^^^ source.liquidsoap
>
>    o = output.dummy(fallible=true, r)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>    thread.run.recurrent(fun () ->
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^^^ source.liquidsoap keyword.control.liquidsoap
#                            ^^^^^^^ source.liquidsoap
>     if not r.is_ready() then
#^^^^^ source.liquidsoap
#     ^^ source.liquidsoap keyword.control.liquidsoap
#       ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^^^^ source.liquidsoap keyword.control.liquidsoap
>       0.1
#^^^^^^^ source.liquidsoap
#       ^^^ source.liquidsoap constant.numeric.float
>     else
#^^^^^ source.liquidsoap
#     ^^^^ source.liquidsoap keyword.control.liquidsoap
>      c = r.current()
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>      if not null.defined(c) then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                             ^^^^ source.liquidsoap keyword.control.liquidsoap
>        print("Invalid current track")
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^ source.liquidsoap
>        test.fail()
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>
>      c = null.get(c)
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      if request.filename(c) != "file1.mp3" then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap
#                                            ^^^^ source.liquidsoap keyword.control.liquidsoap
>        print("Invalid filename")
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^ source.liquidsoap
>        test.fail()
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>
>      o.stop()
#^^^^^^^^^^^^^^^ source.liquidsoap
>      test.pass()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>      (-1.)
#^^^^^^^^ source.liquidsoap
#        ^ source.liquidsoap constant.numeric.integer
#         ^^^ source.liquidsoap
>     end)
#^^^^^ source.liquidsoap
#     ^^^ source.liquidsoap keyword.control.liquidsoap
#        ^^ source.liquidsoap
> end)
#^ source.liquidsoap
# ^^^ source.liquidsoap keyword.control.liquidsoap
#    ^^ source.liquidsoap
>