>s = sine()
#^^^^^^^^^^^ source.liquidsoap
>
>s = insert_metadata(s)
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>def f() =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^ source.liquidsoap
>  s.insert_metadata([("title", "test title"), ("album","foolol")])
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^^^ source.liquidsoap
#                                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                      ^ source.liquidsoap
#                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                        ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                               ^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>thread.run(every=2., f)
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^ source.liquidsoap constant.numeric.integer
#                  ^^^^^^ source.liquidsoap
>
>s = mksafe(s)
#^^^^^^^^^^^^^^ source.liquidsoap
>
>tmp_dir = file.temp_dir("tmp")
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^ source.liquidsoap
>on_cleanup({file.rmdir(tmp_dir)})
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>output.file.hls(
#^^^^^^^^^^^^^^^^^ source.liquidsoap
>  tmp_dir,
#^^^^^^^^^^^ source.liquidsoap
>  [
#^^^^ source.liquidsoap
>   ("aac", %ffmpeg(format="adts",%audio(codec="aac")).{id3_version = 3}),
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^^^^^^^^^^^^ source.liquidsoap
#                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                               ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                   ^^^^^^ source.liquidsoap
#                                                         ^^ source.liquidsoap constant.numeric.integer
#                                                           ^^^^^^^^^^ source.liquidsoap
#                                                                     ^ source.liquidsoap constant.numeric.integer
#                                                                      ^^^^ source.liquidsoap
>   ("ts_with_meta", %ffmpeg(format="mpegts",%audio(codec="aac")).{id3_version = 4}),
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^^^^^^^^^^^^^ source.liquidsoap
#                                                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                          ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                             ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                              ^^^^^^ source.liquidsoap
#                                                                    ^^ source.liquidsoap constant.numeric.integer
#                                                                      ^^^^^^^^^^ source.liquidsoap
#                                                                                ^ source.liquidsoap constant.numeric.integer
#                                                                                 ^^^^ source.liquidsoap
>   ("ts", %ffmpeg(format="mpegts",%audio(codec="aac")).{ id3=false }),
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^ source.liquidsoap string.quoted.double.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^^^^^^ source.liquidsoap
#                                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                    ^^^^^^^ source.liquidsoap
#                                                           ^ source.liquidsoap constant.numeric.integer
#                                                            ^^^^^^^^^^^ source.liquidsoap
>   ("mp4", %ffmpeg(format="mp4",frag_duration=10,movflags="+dash+skip_sidx+skip_trailer+frag_custom",%audio(codec="aac")))
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^ source.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^^^^^^^^^^^^^^^ source.liquidsoap
#                                              ^^ source.liquidsoap constant.numeric.integer
#                                                ^^^^^^^^^^ source.liquidsoap
#                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                    ^^^^^^^^^^^^^^ source.liquidsoap
#                                                                                                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                   ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                                       ^^^^ source.liquidsoap
>  ],
#^^^^^ source.liquidsoap
>  s
#^^^^ source.liquidsoap
>)
#^^ source.liquidsoap
>
>to_check = ref({
#^^^^^^^^^^^^^^^^^ source.liquidsoap
>  aac = null(),
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  ts_with_meta = null(),
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  ts = null(),
#^^^^^^^^^^^^^^^ source.liquidsoap
>  mp4 = null()
#^^^^ source.liquidsoap
#    ^ source.liquidsoap constant.numeric.integer
#     ^^^^^^^^^^ source.liquidsoap
>})
#^^^ source.liquidsoap
>
>def check_done() =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^^ source.liquidsoap
>  let { aac, ts_with_meta, ts, mp4 } = to_check()
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap constant.numeric.integer
#                                  ^^^^^^^^^^^^^^^^ source.liquidsoap
>
>  if null.defined(ts) then test.fail("ts shouldn't have metadata!") end
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
#                          ^^^^^^^^^^^ source.liquidsoap
#                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                  ^^ source.liquidsoap
#                                                                    ^^^ source.liquidsoap keyword.control.liquidsoap
>  if null.defined(mp4) then test.fail("mp4 should have metadata but it's not supported by the demuxer yet.") end
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^ source.liquidsoap constant.numeric.integer
#                     ^^ source.liquidsoap
#                       ^^^^ source.liquidsoap keyword.control.liquidsoap
#                           ^^^^^^^^^^^ source.liquidsoap
#                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                                           ^^ source.liquidsoap
#                                                                                                             ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  if null.defined(aac) and null.defined(ts_with_meta) then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                       ^^^ source.liquidsoap keyword.operator.liquidsoap
#                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    aac = null.get(aac)
#^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    ts_with_meta = null.get(ts_with_meta)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    if aac["title"] == "test title" and aac["album"] == "foolol" and
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^ source.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^^^^^ source.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^^^ source.liquidsoap keyword.operator.liquidsoap
#                                       ^^^^^ source.liquidsoap
#                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                   ^^^^^ source.liquidsoap
#                                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                         ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                ^ source.liquidsoap
#                                                                 ^^^ source.liquidsoap keyword.operator.liquidsoap
>       ts_with_meta["title"] == "test title" and ts_with_meta["album"] == "foolol" then
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^^^^^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap
#                                             ^^^ source.liquidsoap keyword.operator.liquidsoap
#                                                ^^^^^^^^^^^^^^ source.liquidsoap
#                                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                               ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                     ^^^^^ source.liquidsoap
#                                                                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                           ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                                  ^ source.liquidsoap
#                                                                                   ^^^^ source.liquidsoap keyword.control.liquidsoap
>      test.pass()
#^^^^^^^^^^^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>aac = input.hls("#{tmp_dir}/aac.m3u8")
#^^^^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^ source.liquidsoap
>
>aac = source.on_metadata(aac, fun (m) -> begin
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                              ^^^ source.liquidsoap keyword.control.liquidsoap
#                                 ^^^^^^^^ source.liquidsoap
#                                         ^^^^^ source.liquidsoap keyword.control.liquidsoap
>  if m["title"] != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    to_check := to_check().{ aac = m }
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>  check_done()
#^^^^^^^^^^^^^^^ source.liquidsoap
>end)
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
>
>output.dummy(fallible=true, aac)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>ts_with_meta = input.hls("#{tmp_dir}/ts_with_meta.m3u8")
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                       ^^ source.liquidsoap
>
>ts_with_meta = source.on_metadata(ts_with_meta, fun (m) -> begin
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                ^^^ source.liquidsoap keyword.control.liquidsoap
#                                                   ^^^^^^^^ source.liquidsoap
#                                                           ^^^^^ source.liquidsoap keyword.control.liquidsoap
>  if m["title"] != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    to_check := to_check().{ ts_with_meta = m }
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>  check_done()
#^^^^^^^^^^^^^^^ source.liquidsoap
>end)
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
>
>output.dummy(fallible=true, ts_with_meta)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>ts = input.hls("#{tmp_dir}/ts.m3u8")
#^^^^^^^^^^^^^^^ source.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^ source.liquidsoap
>
>ts = source.on_metadata(ts, fun (m) -> begin
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                            ^^^ source.liquidsoap keyword.control.liquidsoap
#                               ^^^^^^^^ source.liquidsoap
#                                       ^^^^^ source.liquidsoap keyword.control.liquidsoap
>  if m["title"] != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    to_check := to_check().{ ts = m }
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>  check_done()
#^^^^^^^^^^^^^^^ source.liquidsoap
>end)
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
>
>output.dummy(fallible=true, ts)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>mp4 = input.hls("#{tmp_dir}/mp4.m3u8")
#^^ source.liquidsoap
#  ^ source.liquidsoap constant.numeric.integer
#   ^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^ source.liquidsoap
>
>mp4 = source.on_metadata(mp4, fun (m) -> begin
#^^ source.liquidsoap
#  ^ source.liquidsoap constant.numeric.integer
#   ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^ source.liquidsoap
#                              ^^^ source.liquidsoap keyword.control.liquidsoap
#                                 ^^^^^^^^ source.liquidsoap
#                                         ^^^^^ source.liquidsoap keyword.control.liquidsoap
>  if m["title"] != "" then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    to_check := to_check().{ mp4 = m }
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                               ^ source.liquidsoap constant.numeric.integer
#                                ^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>  check_done()
#^^^^^^^^^^^^^^^ source.liquidsoap
>end)
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
>
>output.dummy(fallible=true, mp4)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.integer
#                               ^^ source.liquidsoap
>
>clock.assign_new(sync="none",[s, aac, ts_with_meta, ts, mp4])
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                                          ^ source.liquidsoap constant.numeric.integer
#                                                           ^^^ source.liquidsoap
>