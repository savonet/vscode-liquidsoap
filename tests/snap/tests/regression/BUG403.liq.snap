># This is the test for bug #403 from our old trac.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#
#^^ source.liquidsoap comment.line.number-sign.liquidsoap
># Make a switch() declare itself ready and arrange to use it for the next
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># frame where it isn't ready anymore.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>#
#^^ source.liquidsoap comment.line.number-sign.liquidsoap
># Two switches A and B
#^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># A is only ready for a short period of time due to its predicates.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># B reselects at the end of a frame just before A becomes unavailable
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># as a result, B has selected = A, attempts to stream it
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># but A finds itself not ready anymore.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># In other words, B committed but A did not.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>
>r = ref(false)
#^^^^^^^^^^^^^^^ source.liquidsoap
>def pred () =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^ source.liquidsoap
>  v = !r
#^^^^^^^^^ source.liquidsoap
>  r := false
#^^^^^^^^^^^^^ source.liquidsoap
>  v
#^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>thread.run(delay=2., { r := true })
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^ source.liquidsoap constant.numeric.integer
#                  ^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>mixer = fallback(id="mixer", track_sensitive=false,
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  [source.available(sine(duration=3.), pred), blank()])
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                                  ^ source.liquidsoap constant.numeric.integer
#                                   ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>output.dummy(mixer)
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>thread.run(delay=3., { test.pass() ; shutdown()})
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^ source.liquidsoap constant.numeric.integer
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>