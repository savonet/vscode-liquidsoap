># In #1159, we realized that the decoder
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># was retuning remaining = 0 too early,
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># trigering an early `on_end` call.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>
>settings.decoder.decoders.set(["flac"])
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                               ^ source.liquidsoap string.quoted.double.liquidsoap
#                                ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^^^ source.liquidsoap
>
>s = single("../media/@flac[stereo].flac")
#^^^^^^^^^^^ source.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                        ^^ source.liquidsoap
>
>def f(rem, _) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^ source.liquidsoap
>  if rem > 0. then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^ source.liquidsoap
#           ^ source.liquidsoap constant.numeric.integer
#            ^^ source.liquidsoap
#              ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.pass()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.fail()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  shutdown()
#^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>s = source.on_end(s,delay=0.1,f)
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                          ^^^ source.liquidsoap constant.numeric.float
#                             ^^^^ source.liquidsoap
>
>clock.assign_new(sync="none",[s])
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^^^^^^ source.liquidsoap
>
>output.dummy(s)
#^^^^^^^^^^^^^^^^ source.liquidsoap
>