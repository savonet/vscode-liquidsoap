>selected = ref([])
#^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>s1 = blank(duration=0.04)
#^ source.liquidsoap
# ^ source.liquidsoap constant.numeric.integer
#  ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^^^^ source.liquidsoap constant.numeric.float
#                        ^^ source.liquidsoap
>
>def m1(_) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap constant.numeric.integer
#      ^^^^^^ source.liquidsoap
>  [("id","s1")]
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^ source.liquidsoap string.quoted.double.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^^ source.liquidsoap string.quoted.double.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>s1 = metadata.map(id="s1",m1,s1)
#^ source.liquidsoap
# ^ source.liquidsoap constant.numeric.integer
#  ^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.integer
#                               ^^ source.liquidsoap
>
>s2 = blank(duration=0.04)
#^ source.liquidsoap
# ^ source.liquidsoap constant.numeric.integer
#  ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^^^^ source.liquidsoap constant.numeric.float
#                        ^^ source.liquidsoap
>
>def m2(_) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^ source.liquidsoap
#     ^ source.liquidsoap constant.numeric.integer
#      ^^^^^^ source.liquidsoap
>  [("id","s2")]
#^^^^ source.liquidsoap
#    ^ source.liquidsoap string.quoted.double.liquidsoap
#     ^^ source.liquidsoap string.quoted.double.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^^ source.liquidsoap string.quoted.double.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>s2 = metadata.map(id="s2",m2,s2)
#^ source.liquidsoap
# ^ source.liquidsoap constant.numeric.integer
#  ^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.integer
#                               ^^ source.liquidsoap
>
>def f(m) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^ source.liquidsoap
>  selected := list.add(m["id"],!selected)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>s = rotate(weights=[2,1],[s1,s2])
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                    ^ source.liquidsoap constant.numeric.integer
#                     ^ source.liquidsoap
#                      ^ source.liquidsoap constant.numeric.integer
#                       ^^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^ source.liquidsoap
#                              ^ source.liquidsoap constant.numeric.integer
#                               ^^^ source.liquidsoap
>
>s.on_track(f)
#^^^^^^^^^^^^^^ source.liquidsoap
>
>output.dummy(s)
#^^^^^^^^^^^^^^^^ source.liquidsoap
>
>def on_done () =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^ source.liquidsoap
>  s = list.rev(!selected)
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  if list.nth(default="",s,0) == "s1" and
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.liquidsoap
>     list.nth(default="",s,1) == "s1" and
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.liquidsoap
>     list.nth(default="",s,2) == "s2" and
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.liquidsoap
>     list.nth(default="",s,3) == "s1" and
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^ source.liquidsoap keyword.operator.liquidsoap
>     list.nth(default="",s,4) == "s1" then
#^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^ source.liquidsoap
#                           ^ source.liquidsoap constant.numeric.integer
#                            ^^^^^ source.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap
#                                      ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.pass()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  else
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.fail()
#^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  shutdown()
#^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>thread.run(delay=1., on_done)
#^^^^^^^^^^^^^^^^^ source.liquidsoap
#                 ^ source.liquidsoap constant.numeric.integer
#                  ^^^^^^^^^^^^ source.liquidsoap
>