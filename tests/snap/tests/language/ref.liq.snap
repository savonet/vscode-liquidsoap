>#!../../liquidsoap ../test.liq
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>
>success = ref(true)
#^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>def t(x, y)
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^ source.liquidsoap
>  if x != y then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^ source.liquidsoap
#            ^^^^ source.liquidsoap keyword.control.liquidsoap
>    print("Failure: got #{x} instead of #{y}")
#^^^^^^^^^^ source.liquidsoap
#          ^ source.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                                             ^^ source.liquidsoap
>    success := false
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>def id(x) = x end
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^ source.liquidsoap
#              ^^^ source.liquidsoap keyword.control.liquidsoap
>def incr(n) = n + 1 end
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^^^^^^ source.liquidsoap
#                  ^ source.liquidsoap constant.numeric.integer
#                   ^ source.liquidsoap
#                    ^^^ source.liquidsoap keyword.control.liquidsoap
>
>def f() =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^ source.liquidsoap
>  n = ref(0)
#^^^^^^^^^^ source.liquidsoap
#          ^ source.liquidsoap constant.numeric.integer
#           ^^ source.liquidsoap
>  n := 5
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap constant.numeric.integer
>  t(n(), 5)
#^^^^^^^^^ source.liquidsoap
#         ^ source.liquidsoap constant.numeric.integer
#          ^^ source.liquidsoap
>  s = ref("a")
#^^^^^^^^^^ source.liquidsoap
#          ^ source.liquidsoap string.quoted.double.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^ source.liquidsoap string.quoted.double.liquidsoap
#             ^^ source.liquidsoap
>  s := "b"
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap string.quoted.double.liquidsoap
#        ^ source.liquidsoap string.quoted.double.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
>  t(s(), "b")
#^^^^^^^^^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^ source.liquidsoap string.quoted.double.liquidsoap
#           ^ source.liquidsoap string.quoted.double.liquidsoap
#            ^^ source.liquidsoap
>  f = ref(id)
#^^^^^^^^^^^^^^ source.liquidsoap
>  f := incr
#^^^^^^^^^^^^ source.liquidsoap
>
>  r = ref.make({0},fun(x)->ignore(x+1))
#^^^^^^^^^^^^^^^^ source.liquidsoap
#                ^ source.liquidsoap constant.numeric.integer
#                 ^^ source.liquidsoap
#                   ^^^ source.liquidsoap keyword.control.liquidsoap
#                      ^^^^^^^^^^^^^^ source.liquidsoap
#                                    ^ source.liquidsoap constant.numeric.integer
#                                     ^^^ source.liquidsoap
>  _ = ref.map(float_of_int, int_of_float, r)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>
>  if success() then test.pass() else test.fail() end
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^^^^ source.liquidsoap
#               ^^^^ source.liquidsoap keyword.control.liquidsoap
#                   ^^^^^^^^^^^^^ source.liquidsoap
#                                ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                    ^^^^^^^^^^^^^ source.liquidsoap
#                                                 ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>test.check(f)
#^^^^^^^^^^^^^^ source.liquidsoap
>