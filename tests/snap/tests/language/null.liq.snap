>def t(x,y) =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^^^^ source.liquidsoap
>  if x != y then test.fail() end
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^^^^^^^^ source.liquidsoap
#            ^^^^ source.liquidsoap keyword.control.liquidsoap
#                ^^^^^^^^^^^^^ source.liquidsoap
#                             ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>def f() =
#^^^ source.liquidsoap keyword.control.liquidsoap
#   ^^^^^^^ source.liquidsoap
>  t(null() ?? "bla", "bla")
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                   ^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                         ^ source.liquidsoap string.quoted.double.liquidsoap
#                          ^^ source.liquidsoap
>  t(null("foo") ?? "bla", "foo")
#^^^^^^^^^ source.liquidsoap
#         ^ source.liquidsoap string.quoted.double.liquidsoap
#          ^^^ source.liquidsoap string.quoted.double.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^^^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^ source.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^^^ source.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                               ^^ source.liquidsoap
>  t(null.case(null(),{true},fun (_) -> false),true)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                            ^^^ source.liquidsoap keyword.control.liquidsoap
#                               ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  t(null.case("x",{true}, fun(_) -> false),false)
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^ source.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^^^^^ source.liquidsoap
#                          ^^^ source.liquidsoap keyword.control.liquidsoap
#                             ^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
>  t(null.get("x"), "x")
#^^^^^^^^^^^^^ source.liquidsoap
#             ^ source.liquidsoap string.quoted.double.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^ source.liquidsoap string.quoted.double.liquidsoap
#                ^^^ source.liquidsoap
#                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap
>  t(null.get(default="x", "y"), "y")
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^ source.liquidsoap
#                          ^ source.liquidsoap string.quoted.double.liquidsoap
#                           ^ source.liquidsoap string.quoted.double.liquidsoap
#                            ^ source.liquidsoap string.quoted.double.liquidsoap
#                             ^^^ source.liquidsoap
#                                ^ source.liquidsoap string.quoted.double.liquidsoap
#                                 ^ source.liquidsoap string.quoted.double.liquidsoap
#                                  ^ source.liquidsoap string.quoted.double.liquidsoap
#                                   ^^ source.liquidsoap
>  t(null.get(default="x", null()), "x")
#^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap
#                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^^^^^^^^^^ source.liquidsoap
#                                   ^ source.liquidsoap string.quoted.double.liquidsoap
#                                    ^ source.liquidsoap string.quoted.double.liquidsoap
#                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                      ^^ source.liquidsoap
>  t(null.find(fun (x) -> if x mod 2 == 0 then 2*x else null() end, [1,3,2,5]), 4)
#^^^^^^^^^^^^^^ source.liquidsoap
#              ^^^ source.liquidsoap keyword.control.liquidsoap
#                 ^^^^^^^^ source.liquidsoap
#                         ^^ source.liquidsoap keyword.control.liquidsoap
#                           ^^^^^^^ source.liquidsoap
#                                  ^ source.liquidsoap constant.numeric.integer
#                                   ^^^^ source.liquidsoap
#                                       ^ source.liquidsoap constant.numeric.integer
#                                        ^ source.liquidsoap
#                                         ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                             ^ source.liquidsoap
#                                              ^ source.liquidsoap constant.numeric.integer
#                                               ^^^ source.liquidsoap
#                                                  ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                      ^^^^^^^^ source.liquidsoap
#                                                              ^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                 ^^^ source.liquidsoap
#                                                                    ^ source.liquidsoap constant.numeric.integer
#                                                                     ^ source.liquidsoap
#                                                                      ^ source.liquidsoap constant.numeric.integer
#                                                                       ^ source.liquidsoap
#                                                                        ^ source.liquidsoap constant.numeric.integer
#                                                                         ^ source.liquidsoap
#                                                                          ^ source.liquidsoap constant.numeric.integer
#                                                                           ^^^^ source.liquidsoap
#                                                                               ^ source.liquidsoap constant.numeric.integer
#                                                                                ^^ source.liquidsoap
>
>  def f((x:int?)) =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^^^^^^^^^ source.liquidsoap
>    if true then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^ source.liquidsoap
#            ^^^^ source.liquidsoap keyword.control.liquidsoap
>      1
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap constant.numeric.integer
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      x
#^^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  def g() =
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^ source.liquidsoap
>    if true then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^^^^^^ source.liquidsoap
#            ^^^^ source.liquidsoap keyword.control.liquidsoap
>      null()
#^^^^^^^^^^^^^ source.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>     (1:int?)
#^^^^^^ source.liquidsoap
#      ^ source.liquidsoap constant.numeric.integer
#       ^^^^^^^ source.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>
>  # Subtyping
#^^ source.liquidsoap
#  ^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  def f() = if true then null() else 1 end end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^ source.liquidsoap
#            ^^ source.liquidsoap keyword.control.liquidsoap
#              ^^^^^^ source.liquidsoap
#                    ^^^^ source.liquidsoap keyword.control.liquidsoap
#                        ^^^^^^^^ source.liquidsoap
#                                ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^ source.liquidsoap constant.numeric.integer
#                                      ^ source.liquidsoap
#                                       ^^^ source.liquidsoap keyword.control.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^^^ source.liquidsoap keyword.control.liquidsoap
>  def f() = if true then 1 else null() end end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^^^^^^^ source.liquidsoap
#            ^^ source.liquidsoap keyword.control.liquidsoap
#              ^^^^^^ source.liquidsoap
#                    ^^^^ source.liquidsoap keyword.control.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap constant.numeric.integer
#                          ^ source.liquidsoap
#                           ^^^^ source.liquidsoap keyword.control.liquidsoap
#                               ^^^^^^^^ source.liquidsoap
#                                       ^^^ source.liquidsoap keyword.control.liquidsoap
#                                          ^ source.liquidsoap
#                                           ^^^ source.liquidsoap keyword.control.liquidsoap
>  _ = [null(), 3]
#^^^^^^^^^^^^^^^ source.liquidsoap
#               ^ source.liquidsoap constant.numeric.integer
#                ^^ source.liquidsoap
>  _ = [3, null()]
#^^^^^^^ source.liquidsoap
#       ^ source.liquidsoap constant.numeric.integer
#        ^^^^^^^^^^ source.liquidsoap
>
>  test.pass()
#^^^^^^^^^^^^^^ source.liquidsoap
>end
#^^^ source.liquidsoap keyword.control.liquidsoap
>
>test.check(f)
#^^^^^^^^^^^^^^ source.liquidsoap
>