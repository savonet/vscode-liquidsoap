>log.level.set(4)
#^^^ source.liquidsoap variable.liquidsoap
#   ^ source.liquidsoap keyword.other.liquidsoap
#    ^^^^^ source.liquidsoap variable.method.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
>
>test = ()
#^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#    ^^ source.liquidsoap
#      ^^^^ source.liquidsoap
>
>let test.done = ref(false)
#^^^ source.liquidsoap keyword.other.function.declaration.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^^ source.liquidsoap
#                ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
>
># End test successfully.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def test.pass()
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap
>  if not test.done() then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#        ^ source.liquidsoap
#         ^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap
#                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>    test.done := true
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap keyword.other.liquidsoap
#         ^^^^ source.liquidsoap variable.method.liquidsoap
#             ^ source.liquidsoap
#              ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                ^ source.liquidsoap
#                 ^^^^ source.liquidsoap constant.language.boolean.liquidsoap
>    print("Test passed!")
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>    shutdown()
#^^^^ source.liquidsoap
#    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># End test with a failure.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def test.fail(reason = null())
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^ source.liquidsoap variable.liquidsoap
#                    ^^^ source.liquidsoap
#                       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap
#                             ^ source.liquidsoap
>  reason = if null.defined(reason) then ": #{null.get(reason)}" else "!" end
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#        ^^ source.liquidsoap
#          ^ source.liquidsoap
#           ^^ source.liquidsoap keyword.control.liquidsoap
#             ^ source.liquidsoap
#              ^^^^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap
#                           ^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap
#                                   ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                       ^ source.liquidsoap
#                                        ^ source.liquidsoap string.quoted.double.liquidsoap
#                                         ^^ source.liquidsoap string.quoted.double.liquidsoap
#                                           ^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                             ^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                  ^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                     ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                      ^^^^^^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                            ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                             ^ source.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                              ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                               ^ source.liquidsoap
#                                                                ^^^^ source.liquidsoap keyword.control.liquidsoap
#                                                                    ^ source.liquidsoap
#                                                                     ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                      ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                                                                        ^ source.liquidsoap
#                                                                         ^^^ source.liquidsoap keyword.control.liquidsoap
>  print("Test failed#{reason}")
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                    ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap
>  exit(1)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># End test with signal 2
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def test.skip()
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap
>  print("Test skipped..")
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>  exit(2)
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Check that files are never repeated in source s, possibly by rounds. The
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># function triggers test.fail on repeated filenames, only clearing its list of
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># seen filenames once all nb_files have been seen.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def test.check_non_repeating(~nb_files,~nb_rounds,s)
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap
#                              ^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                      ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                       ^ source.liquidsoap
#                                        ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                                                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                                  ^ source.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap
>  # List of seen filenames
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  seen = ref([])
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#      ^^ source.liquidsoap
#        ^ source.liquidsoap
#         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
>  # Number of rounds to test
#^^ source.liquidsoap
#  ^ source.liquidsoap comment.line.number-sign.liquidsoap
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>  iterations = ref(0)
#^^ source.liquidsoap
#  ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^^ source.liquidsoap
#              ^ source.liquidsoap
#               ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
>
>  def already(fname)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^ source.liquidsoap variable.liquidsoap
#                   ^ source.liquidsoap
>    list.assoc(default=false, fname, seen())
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                       ^^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                            ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                             ^ source.liquidsoap meta.function-call.liquidsoap
#                              ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                   ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  def check(m)
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap
>    fname = m["filename"]
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#         ^^ source.liquidsoap
#           ^ source.liquidsoap
#            ^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap
#              ^ source.liquidsoap string.quoted.double.liquidsoap
#               ^^^^^^^^ source.liquidsoap string.quoted.double.liquidsoap
#                       ^ source.liquidsoap string.quoted.double.liquidsoap
#                        ^^ source.liquidsoap
>    print("I: Playing #{fname}")
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#           ^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                      ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                        ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap
>    if iterations() < nb_rounds and already(fname) then
#^^^^ source.liquidsoap
#    ^^ source.liquidsoap keyword.control.liquidsoap
#      ^ source.liquidsoap
#       ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
#                   ^ source.liquidsoap
#                    ^ source.liquidsoap keyword.operator.compare.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap
#                                ^^^ source.liquidsoap keyword.operator.boolean.liquidsoap
#                                   ^ source.liquidsoap
#                                    ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                                  ^ source.liquidsoap
#                                                   ^^^^ source.liquidsoap keyword.control.liquidsoap
>      print("I: Already seen #{fname}")
#^^^^^^ source.liquidsoap
#      ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#             ^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                             ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                               ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                      ^ source.liquidsoap meta.function-call.liquidsoap
>      test.fail()
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap variable.liquidsoap
#          ^ source.liquidsoap meta.function-call.liquidsoap
#           ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap
>    else
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap keyword.control.liquidsoap
>      if list.length(seen()) < nb_files-1 then
#^^^^^^ source.liquidsoap
#      ^^ source.liquidsoap keyword.control.liquidsoap
#        ^ source.liquidsoap
#         ^^^^ source.liquidsoap variable.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                          ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                           ^ source.liquidsoap meta.function-call.liquidsoap
#                            ^ source.liquidsoap
#                             ^ source.liquidsoap keyword.operator.compare.liquidsoap
#                              ^ source.liquidsoap
#                               ^^^^^^^^ source.liquidsoap variable.liquidsoap
#                                       ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                        ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
#                                         ^ source.liquidsoap
#                                          ^^^^ source.liquidsoap keyword.control.liquidsoap
>        seen := list.add((fname,true),seen())
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap keyword.operator.set.liquidsoap
#               ^ source.liquidsoap
#                ^^^^ source.liquidsoap variable.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
#                     ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
#                         ^ source.liquidsoap meta.function-call.liquidsoap
#                          ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                ^^^^ source.liquidsoap meta.function-call.liquidsoap constant.language.boolean.liquidsoap
#                                    ^ source.liquidsoap meta.function-call.liquidsoap
#                                     ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                                      ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                          ^ source.liquidsoap meta.function-call.liquidsoap
#                                           ^ source.liquidsoap meta.function-call.liquidsoap
#                                            ^^ source.liquidsoap
>      else
#^^^^^^ source.liquidsoap
#      ^^^^ source.liquidsoap keyword.control.liquidsoap
>        print("I: ===")
#^^^^^^^^ source.liquidsoap
#        ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>        seen := []
#^^^^^^^^ source.liquidsoap
#        ^^^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^^ source.liquidsoap keyword.operator.set.liquidsoap
#               ^^^^ source.liquidsoap
>        iterations := iterations()+1
#^^^^^^^^ source.liquidsoap
#        ^^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap keyword.operator.set.liquidsoap
#                     ^ source.liquidsoap
#                      ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
#                                 ^ source.liquidsoap meta.function-call.liquidsoap
#                                  ^ source.liquidsoap keyword.operator.arithmetic.liquidsoap
#                                   ^ source.liquidsoap constant.numeric.decimal.integer.liquidsoap
>        if iterations() == nb_rounds then
#^^^^^^^^ source.liquidsoap
#        ^^ source.liquidsoap keyword.control.liquidsoap
#          ^ source.liquidsoap
#           ^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
#                       ^ source.liquidsoap
#                        ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#                          ^ source.liquidsoap
#                           ^^^^^^^^^ source.liquidsoap variable.liquidsoap
#                                    ^ source.liquidsoap
#                                     ^^^^ source.liquidsoap keyword.control.liquidsoap
>          print("I: Test passed")
#^^^^^^^^^^ source.liquidsoap
#          ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                 ^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
>          test.pass()
#^^^^^^^^^^ source.liquidsoap
#          ^^^^ source.liquidsoap variable.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                   ^ source.liquidsoap meta.function-call.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap
>        end
#^^^^^^^^ source.liquidsoap
#        ^^^ source.liquidsoap keyword.control.liquidsoap
>      end
#^^^^^^ source.liquidsoap
#      ^^^ source.liquidsoap keyword.control.liquidsoap
>    end
#^^^^ source.liquidsoap
#    ^^^ source.liquidsoap keyword.control.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>  s.on_track(check)
#^^ source.liquidsoap
#  ^ source.liquidsoap variable.liquidsoap
#   ^ source.liquidsoap meta.function-call.liquidsoap
#    ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                  ^ source.liquidsoap meta.function-call.liquidsoap
>
>  s
#^^ source.liquidsoap
#  ^ source.liquidsoap variable.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>def test.equals(v, v') =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#               ^ source.liquidsoap
#                ^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                  ^ source.liquidsoap
#                   ^^ source.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap
#                      ^^ source.liquidsoap
>  if v != v' then
#^^ source.liquidsoap
#  ^^ source.liquidsoap keyword.control.liquidsoap
#    ^ source.liquidsoap
#     ^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap
#       ^^ source.liquidsoap keyword.operator.compare.liquidsoap
#         ^ source.liquidsoap
#          ^^ source.liquidsoap variable.liquidsoap
#            ^ source.liquidsoap
#             ^^^^ source.liquidsoap keyword.control.liquidsoap
>    error.raise(error.failure, "expected:\r\n#{string.quote(string(v'))}\r\ngot:\r\n#{string.quote(string(v))}")
#^^^^ source.liquidsoap
#    ^^^^^ source.liquidsoap variable.liquidsoap
#         ^ source.liquidsoap meta.function-call.liquidsoap
#          ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap
#                      ^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.method.liquidsoap
#                             ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                              ^ source.liquidsoap meta.function-call.liquidsoap
#                               ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                         ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                           ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                             ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                               ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                      ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                            ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                   ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                     ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                      ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                       ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                        ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                                          ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                                            ^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                                                  ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                                                    ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                                      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                                                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                                             ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                                                   ^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                                                                                                         ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                                          ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                                                                                           ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                                                                                                            ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap meta.function-call.liquidsoap
#                                                                                                             ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                                                              ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                                                               ^ source.liquidsoap meta.function-call.liquidsoap
>    test.fail()
#^^^^ source.liquidsoap
#    ^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#             ^ source.liquidsoap meta.function-call.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
>  end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
># Asynchronous test handler with dummy output
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># Best practice is to run all manual tests
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
># through this one.
#^ source.liquidsoap comment.line.number-sign.liquidsoap
# ^^^^^^^^^^^^^^^^^^ source.liquidsoap comment.line.number-sign.liquidsoap
>def test.check(f) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^ source.liquidsoap
#               ^ source.liquidsoap variable.liquidsoap
#                ^ source.liquidsoap
#                 ^^ source.liquidsoap
>  thread.run(delay=0.1,f)
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^^^^^ source.liquidsoap meta.function-call.liquidsoap
#                   ^^^ source.liquidsoap meta.function-call.liquidsoap constant.numeric.decimal.float.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                       ^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                        ^ source.liquidsoap meta.function-call.liquidsoap
>  output.dummy(blank())
#^^ source.liquidsoap
#  ^^^^^^ source.liquidsoap variable.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap
#         ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#              ^ source.liquidsoap meta.function-call.liquidsoap
#               ^^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>def test.raise(fn) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#              ^ source.liquidsoap
#               ^^ source.liquidsoap variable.liquidsoap
#                 ^ source.liquidsoap
#                  ^^ source.liquidsoap
>  try ignore(fn()) catch _ do () end
#^^ source.liquidsoap
#  ^^^ source.liquidsoap keyword.control.liquidsoap
#     ^ source.liquidsoap
#      ^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
#             ^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                 ^ source.liquidsoap meta.function-call.liquidsoap
#                  ^ source.liquidsoap
#                   ^^^^^ source.liquidsoap keyword.other.liquidsoap
#                        ^ source.liquidsoap
#                         ^ source.liquidsoap entity.name.function.binding.liquidsoap
#                          ^ source.liquidsoap
#                           ^^ source.liquidsoap keyword.other.liquidsoap
#                             ^^^^ source.liquidsoap
#                                 ^^^ source.liquidsoap keyword.control.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>
>def on_error(~backtrace, error) =
#^^^ source.liquidsoap keyword.other.function.definition.liquidsoap
#   ^ source.liquidsoap
#    ^^^^^^^^ source.liquidsoap entity.name.function.binding.liquidsoap
#            ^ source.liquidsoap
#             ^ source.liquidsoap
#              ^^^^^^^^^ source.liquidsoap variable.parameter.liquidsoap
#                       ^ source.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                        ^ source.liquidsoap
#                         ^^^^^ source.liquidsoap variable.liquidsoap
#                              ^ source.liquidsoap
#                               ^^ source.liquidsoap
>  print("Uncaught error while running test: #{error}\n#{backtrace}")
#^^ source.liquidsoap
#  ^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#       ^ source.liquidsoap meta.function-call.liquidsoap
#        ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                            ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                              ^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                   ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                    ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap constant.character.escape.liquidsoap
#                                                      ^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                        ^^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap variable.liquidsoap
#                                                                 ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap string.interpolation.liquidsoap
#                                                                  ^ source.liquidsoap meta.function-call.liquidsoap string.quoted.double.liquidsoap
#                                                                   ^ source.liquidsoap meta.function-call.liquidsoap
>  test.fail()
#^^ source.liquidsoap
#  ^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#           ^ source.liquidsoap meta.function-call.liquidsoap
#            ^ source.liquidsoap meta.function-call.liquidsoap
>end
#^^^ source.liquidsoap keyword.other.function.end.liquidsoap
>thread.on_error(null(), on_error)
#^^^^^^ source.liquidsoap variable.liquidsoap
#      ^ source.liquidsoap meta.function-call.liquidsoap
#       ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#               ^ source.liquidsoap meta.function-call.liquidsoap
#                ^^^^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap entity.name.function.liquidsoap
#                    ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                     ^ source.liquidsoap meta.function-call.liquidsoap meta.function-call.liquidsoap
#                      ^ source.liquidsoap meta.function-call.liquidsoap keyword.other.liquidsoap punctuation.comma punctuation.separator.comma
#                       ^ source.liquidsoap meta.function-call.liquidsoap
#                        ^^^^^^^^ source.liquidsoap meta.function-call.liquidsoap variable.liquidsoap
#                                ^ source.liquidsoap meta.function-call.liquidsoap
>