log.level.set(4)
settings.ffmpeg.log.level.set(12)
audio.samplerate.set(48000)

out = "stream_audio.wav"

if file.exists(out) then
  file.remove(out)
end

s = noise(duration=2.)

s = once(s)

#clock.assign_new(sync='none',[s])

output.udp(id="output",port=5001,host="localhost",fallible=true,@FORMAT@,s)

s = input.udp(id="input",port=5001,host="localhost",buffer=0.1,"application/ffmpeg")

s = (s:source(1,0,0))

#clock.assign_new(sync='none',[s])

def on_done () =
  if not test.done() then
    j = process.read("ffprobe -v quiet -print_format json -show_streams #{process.quote(out)}")

    let json.parse ( parsed: {
      streams: [{
        channels: int,
        sample_rate: string
      }]
    }) = j

    let [stream] = parsed.streams

    if stream.channels == 1 and stream.sample_rate == "48000" then
      test.pass()
    else
      test.fail()
    end
  end
end

output.file(fallible=true, on_close=on_close, %wav(mono), out, s)
